{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import resolveAsync from\"./resolveAsync\";function uriAsync(fileReference,options){var asset;return _regeneratorRuntime.async(function uriAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(resolveAsync(fileReference,options));case 2:asset=_context.sent;if(asset){_context.next=5;break;}throw new Error(\"expo-asset-utils: uriAsync(): failed to resolve asset: \"+fileReference);case 5:return _context.abrupt(\"return\",asset.localUri);case 6:case\"end\":return _context.stop();}}});}export default uriAsync;","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/node_modules/expo-asset-utils/src/uriAsync.js"],"names":["resolveAsync","uriAsync","fileReference","options","asset","Error","localUri"],"mappings":"4DAGA,MAAOA,CAAAA,YAAP,sBAEA,QAAeC,CAAAA,QAAf,CAAwBC,aAAxB,CAAiDC,OAAjD,+KACsBH,YAAY,CAACE,aAAD,CAAgBC,OAAhB,CADlC,SACQC,KADR,kBAEOA,KAFP,8BAGU,IAAIC,CAAAA,KAAJ,2DAAoEH,aAApE,CAHV,wCAKSE,KAAK,CAACE,QALf,gDAQA,cAAeL,CAAAA,QAAf","sourcesContent":["// @flow\n\nimport type { WildCard } from './resolveAsync';\nimport resolveAsync from './resolveAsync';\n\nasync function uriAsync(fileReference: WildCard, options): Promise<?string> {\n  const asset = await resolveAsync(fileReference, options);\n  if (!asset) {\n    throw new Error(`expo-asset-utils: uriAsync(): failed to resolve asset: ${fileReference}`);\n  }\n  return asset.localUri;\n}\n\nexport default uriAsync;\n"]},"metadata":{},"sourceType":"module"}