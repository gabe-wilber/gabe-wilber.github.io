{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{useEffect,useState}from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";export default(function(){var _useState=useState({window:Dimensions.get('window'),screen:Dimensions.get('screen')}),_useState2=_slicedToArray(_useState,2),dimensions=_useState2[0],setDimensions=_useState2[1];var onChange=function onChange(_ref){var window=_ref.window,screen=_ref.screen;setDimensions({window:window,screen:screen});};useEffect(function(){Dimensions.addEventListener('change',onChange);return function(){return Dimensions.removeEventListener('change',onChange);};},[]);return dimensions;});","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/src/hooks/useDimensions.js"],"names":["useEffect","useState","window","Dimensions","get","screen","dimensions","setDimensions","onChange","addEventListener","removeEventListener"],"mappings":"iEAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,C,iEAGA,eAAe,UAAM,eACiBA,QAAQ,CAAC,CAC3CC,MAAM,CAAEC,UAAU,CAACC,GAAX,CAAe,QAAf,CADmC,CAE3CC,MAAM,CAAEF,UAAU,CAACC,GAAX,CAAe,QAAf,CAFmC,CAAD,CADzB,wCACZE,UADY,eACAC,aADA,eAMnB,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAAwB,IAArBN,CAAAA,MAAqB,MAArBA,MAAqB,CAAbG,MAAa,MAAbA,MAAa,CACvCE,aAAa,CAAC,CAAEL,MAAM,CAANA,MAAF,CAAUG,MAAM,CAANA,MAAV,CAAD,CAAb,CACD,CAFD,CAIAL,SAAS,CAAC,UAAM,CACdG,UAAU,CAACM,gBAAX,CAA4B,QAA5B,CAAsCD,QAAtC,EAEA,MAAO,kBAAML,CAAAA,UAAU,CAACO,mBAAX,CAA+B,QAA/B,CAAyCF,QAAzC,CAAN,EAAP,CACD,CAJQ,CAIN,EAJM,CAAT,CAMA,MAAOF,CAAAA,UAAP,CACD,CAjBD","sourcesContent":["import { useEffect, useState } from 'react';\nimport { Dimensions } from 'react-native';\n\nexport default () => {\n  const [dimensions, setDimensions] = useState({\n    window: Dimensions.get('window'),\n    screen: Dimensions.get('screen'),\n  });\n\n  const onChange = ({ window, screen }) => {\n    setDimensions({ window, screen });\n  };\n\n  useEffect(() => {\n    Dimensions.addEventListener('change', onChange);\n\n    return () => Dimensions.removeEventListener('change', onChange);\n  }, []);\n\n  return dimensions;\n};\n"]},"metadata":{},"sourceType":"module"}