{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import{readAsStringAsync,EncodingType}from'expo-file-system';import{getSizeAsync}from\"./ImageUtils\";function base64forImageUriAsync(uri){var size,data;return _regeneratorRuntime.async(function base64forImageUriAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(getSizeAsync(uri));case 2:size=_context.sent;_context.next=5;return _regeneratorRuntime.awrap(readAsStringAsync(uri,{encoding:EncodingType.Base64}));case 5:data=_context.sent;return _context.abrupt(\"return\",{data:data,size:size});case 7:case\"end\":return _context.stop();}}});}export default base64forImageUriAsync;","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/node_modules/expo-asset-utils/src/base64forImageUriAsync.js"],"names":["readAsStringAsync","EncodingType","getSizeAsync","base64forImageUriAsync","uri","size","encoding","Base64","data"],"mappings":"4DACA,OAASA,iBAAT,CAA4BC,YAA5B,KAAgD,kBAAhD,CACA,OAASC,YAAT,oBAEA,QAAeC,CAAAA,sBAAf,CAAsCC,GAAtC,iMACqBF,YAAY,CAACE,GAAD,CADjC,SACQC,IADR,gEAEqBL,iBAAiB,CAACI,GAAD,CAAM,CACxCE,QAAQ,CAAEL,YAAY,CAACM,MADiB,CAAN,CAFtC,SAEQC,IAFR,+CAKS,CAAEA,IAAI,CAAJA,IAAF,CAAQH,IAAI,CAAJA,IAAR,CALT,gDAQA,cAAeF,CAAAA,sBAAf","sourcesContent":["// @flow\nimport { readAsStringAsync, EncodingType } from 'expo-file-system';\nimport { getSizeAsync } from './ImageUtils';\n\nasync function base64forImageUriAsync(uri: string): Promise<Data> {\n  const size = await getSizeAsync(uri);\n  const data = await readAsStringAsync(uri, {\n    encoding: EncodingType.Base64,\n  });\n  return { data, size };\n}\n\nexport default base64forImageUriAsync;\n"]},"metadata":{},"sourceType":"module"}