{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import{Power2,TweenMax}from'gsap';import{Object3D,Box3}from'three';import ModelLoader from\"../../src/ModelLoader\";import{disableDriftwood}from\"../GameSettings\";import Foam from\"../Particles/Foam\";var Water=function(_Object3D){_inherits(Water,_Object3D);function Water(heroWidth,onCollide){var _this;_classCallCheck(this,Water);_this=_possibleConstructorReturn(this,_getPrototypeOf(Water).call(this));_this.active=false;_this.entities=[];_this.sineCount=0;_this.sineInc=Math.PI/50;_this.top=0.25;_this.getWidth=function(mesh){var box3=new Box3();box3.setFromObject(mesh);return Math.round(box3.max.x-box3.min.x);};_this.generate=function(){_this.entities.map(function(val){_this.floor.remove(val.mesh);val=null;});_this.entities=[];if(_this.isStaticRow(_this.position.z|0)){_this.generateStatic();}else if(!disableDriftwood){_this.generateDynamic();}};_this.generateStatic=function(){var numItems=Math.floor(Math.random()*2)+2;var xPos=Math.floor(Math.random()*2-4);var x=0;while(x<numItems){if(_this.entities.length-1<x){var mesh=ModelLoader._lilyPad.getRandom();var width=_this.getWidth(mesh);_this.entities.push({mesh:mesh,top:0.2,min:0.01,mid:0.125,dir:0,width:width,collisionBox:_this.heroWidth/2+width/2-0.1});_this.floor.add(mesh);}_this.entities[x].mesh.position.set(xPos,0.125,0);_this.entities[x].speed=0;TweenMax.to(_this.entities[x].mesh.rotation,Math.random()*2+2,{y:Math.random()*1.5+0.5,yoyo:true,repeat:-1,ease:Power2.easeInOut});xPos+=Math.floor(Math.random()*2+2);x++;}};_this.generateDynamic=function(){var speed=Math.random()*0.05+0.02;var numItems=Math.floor(Math.random()*2)+2;var xDir=1;if(Math.random()>0.5){xDir=-1;}var xPos=-6*xDir;for(var x=0;x<numItems;x++){if(_this.entities.length-1<x){var mesh=ModelLoader._log.getRandom();var width=_this.getWidth(mesh);_this.entities.push({mesh:mesh,top:0.3,min:-0.3,mid:-0.1,dir:xDir,width:width,collisionBox:_this.heroWidth/2+width/2-0.1});_this.floor.add(mesh);}_this.entities[x].mesh.position.set(xPos,-0.1,0);_this.entities[x].speed=speed*xDir;xPos-=(Math.random()*3+5)*xDir;}};_this.bounce=function(_ref){var entity=_ref.entity,player=_ref.player;var timing=0.2;TweenLite.to(entity.mesh.position,timing*0.9,{y:entity.min});TweenLite.to(entity.mesh.position,timing,{y:entity.mid,delay:timing});TweenMax.to(player.position,timing*0.9,{y:entity.top+entity.min});TweenMax.to(player.position,timing,{y:entity.top+entity.mid,delay:timing});};_this.isStaticRow=function(index){return index%2===0;};_this.update=function(dt,player){if(!_this.active){return;}_this.entities.map(function(entity){return _this.move({dt:dt,player:player,entity:entity});});if(!player.moving&&!player.ridingOn){_this.entities.map(function(entity){return _this.shouldCheckCollision({dt:dt,player:player,entity:entity});});_this.shouldCheckHazardCollision({player:player});}};_this.move=function(_ref2){var dt=_ref2.dt,player=_ref2.player,entity=_ref2.entity;var offset=11;entity.mesh.position.x+=entity.speed;if(entity.mesh.position.x>offset&&entity.speed>0){entity.mesh.position.x=-offset;}else if(entity.mesh.position.x<-offset&&entity.speed<0){entity.mesh.position.x=offset;}else{}};_this.getRidableForPosition=function(position){if(Math.round(position.z)!==_this.position.z){return null;}var log=_this.getCollisionLog(position);return log;};_this.getPlayerLowerBouncePositionForEntity=function(entity){return entity.top+entity.mid;};_this.getPlayerSunkenPosition=function(){return Math.sin(_this.sineCount)*0.08-0.2;};_this.shouldCheckHazardCollision=function(_ref3){var player=_ref3.player;if(Math.round(player.position.z)===_this.position.z&&!player.moving){if(!player.ridingOn){if(player.isAlive){_this.onCollide(_this.floor,'water');}else{var y=_this.getPlayerSunkenPosition();_this.sineCount+=_this.sineInc;player.position.y=y;player.rotation.y+=0.01;player.position.x+=_this.entities[0].speed;}}}};_this.getCollisionLog=function(position){for(var _iterator=_this.entities,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\":\"@@iterator\"]();;){var _ref4;if(_isArray){if(_i>=_iterator.length)break;_ref4=_iterator[_i++];}else{_i=_iterator.next();if(_i.done)break;_ref4=_i.value;}var _entity=_ref4;var log=_this.willCollideWithLog2D({position:position,entity:_entity});if(log){return log;}}};_this.willCollideWithLog2D=function(_ref5){var position=_ref5.position,entity=_ref5.entity;var mesh=entity.mesh,collisionBox=entity.collisionBox;if(position.x<mesh.position.x+collisionBox&&position.x>mesh.position.x-collisionBox){return entity;}return null;};_this.shouldCheckCollision=function(_ref6){var player=_ref6.player,entity=_ref6.entity;if(Math.round(player.position.z)===_this.position.z&&player.isAlive){var mesh=entity.mesh,collisionBox=entity.collisionBox;if(player.position.x<mesh.position.x+collisionBox&&player.position.x>mesh.position.x-collisionBox){player.ridingOn=entity;player.ridingOnOffset=player.position.x-entity.mesh.position.x;_this.bounce({entity:entity,player:player});}}};_this.heroWidth=heroWidth;_this.onCollide=onCollide;var _river=ModelLoader._river;_this.floor=_river.getNode();_this.add(_this.floor);var foam=new Foam(1);foam.position.set(4.5,0.2,-0.5);foam.visible=true;foam.run();_this.add(foam);var foamRight=new Foam(-1);foamRight.position.set(-4.5,0.2,-0.5);foamRight.visible=true;foamRight.run();_this.add(foamRight);return _this;}return Water;}(Object3D);export{Water as default};","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/src/Row/Water.js"],"names":["Power2","TweenMax","Object3D","Box3","ModelLoader","disableDriftwood","Foam","Water","heroWidth","onCollide","active","entities","sineCount","sineInc","Math","PI","top","getWidth","mesh","box3","setFromObject","round","max","x","min","generate","map","val","floor","remove","isStaticRow","position","z","generateStatic","generateDynamic","numItems","random","xPos","length","_lilyPad","getRandom","width","push","mid","dir","collisionBox","add","set","speed","to","rotation","y","yoyo","repeat","ease","easeInOut","xDir","_log","bounce","entity","player","timing","TweenLite","delay","index","update","dt","move","moving","ridingOn","shouldCheckCollision","shouldCheckHazardCollision","offset","getRidableForPosition","log","getCollisionLog","getPlayerLowerBouncePositionForEntity","getPlayerSunkenPosition","sin","isAlive","willCollideWithLog2D","ridingOnOffset","_river","getNode","foam","visible","run","foamRight"],"mappings":"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","sourcesContent":["import { Power2, TweenMax } from 'gsap';\nimport { Object3D, Box3 } from 'three';\n\nimport ModelLoader from '../../src/ModelLoader';\nimport { disableDriftwood } from '../GameSettings';\nimport Foam from '../Particles/Foam';\n\nexport default class Water extends Object3D {\n  active = false;\n  entities = [];\n  sineCount = 0;\n  sineInc = Math.PI / 50;\n  top = 0.25;\n\n  getWidth = mesh => {\n    let box3 = new Box3();\n    box3.setFromObject(mesh);\n    // console.log( box.min, box.max, box.size() );\n    return Math.round(box3.max.x - box3.min.x);\n  };\n\n  generate = () => {\n    this.entities.map(val => {\n      this.floor.remove(val.mesh);\n      val = null;\n    });\n    this.entities = [];\n\n    if (this.isStaticRow(this.position.z | 0)) {\n      this.generateStatic();\n    } else if (!disableDriftwood) {\n      this.generateDynamic();\n    }\n  };\n\n  generateStatic = () => {\n    // Speeds: .01 through .08\n    // Number of cars: 1 through 3\n    let numItems = Math.floor(Math.random() * 2) + 2;\n\n    let xPos = Math.floor(Math.random() * 2 - 4);\n    let x = 0;\n    while (x < numItems) {\n      if (this.entities.length - 1 < x) {\n        let mesh = ModelLoader._lilyPad.getRandom();\n        const width = this.getWidth(mesh);\n        this.entities.push({\n          mesh,\n          top: 0.2,\n          min: 0.01,\n          mid: 0.125,\n          dir: 0,\n          width,\n          collisionBox: this.heroWidth / 2 + width / 2 - 0.1,\n        });\n        this.floor.add(mesh);\n      }\n\n      this.entities[x].mesh.position.set(xPos, 0.125, 0);\n      this.entities[x].speed = 0;\n      // this.entities[x].mesh.rotation.y = (Math.PI / 2) * xDir;\n\n      TweenMax.to(this.entities[x].mesh.rotation, Math.random() * 2 + 2, {\n        y: Math.random() * 1.5 + 0.5,\n        yoyo: true,\n        repeat: -1,\n        ease: Power2.easeInOut,\n      });\n\n      xPos += Math.floor(Math.random() * 2 + 2);\n      x++\n    }\n  };\n\n  generateDynamic = () => {\n    // Speeds: .01 through .08\n    // Number of cars: 1 through 3\n    let speed = Math.random() * 0.05 + 0.02;\n    let numItems = Math.floor(Math.random() * 2) + 2;\n    let xDir = 1;\n\n    if (Math.random() > 0.5) {\n      xDir = -1;\n    }\n\n    let xPos = -6 * xDir;\n\n    for (let x = 0; x < numItems; x++) {\n      if (this.entities.length - 1 < x) {\n        let mesh = ModelLoader._log.getRandom();\n        const width = this.getWidth(mesh);\n\n        this.entities.push({\n          mesh,\n          top: 0.3,\n          min: -0.3,\n          mid: -0.1,\n          dir: xDir,\n          width,\n          collisionBox: this.heroWidth / 2 + width / 2 - 0.1,\n        });\n\n        this.floor.add(mesh);\n      }\n\n      this.entities[x].mesh.position.set(xPos, -0.1, 0);\n      this.entities[x].speed = speed * xDir;\n      // this.entities[x].mesh.rotation.y = (Math.PI / 2) * xDir;\n\n      xPos -= (Math.random() * 3 + 5) * xDir;\n    }\n  };\n\n  bounce = ({ entity, player }) => {\n    let timing = 0.2;\n\n    TweenLite.to(entity.mesh.position, timing * 0.9, {\n      y: entity.min,\n    });\n\n    TweenLite.to(entity.mesh.position, timing, {\n      y: entity.mid,\n      delay: timing,\n    });\n\n    TweenMax.to(player.position, timing * 0.9, {\n      y: entity.top + entity.min,\n    });\n\n    TweenMax.to(player.position, timing, {\n      y: entity.top + entity.mid,\n      delay: timing,\n    });\n  };\n\n  constructor(heroWidth, onCollide) {\n    super();\n    this.heroWidth = heroWidth;\n    this.onCollide = onCollide;\n    const { _river } = ModelLoader;\n\n    this.floor = _river.getNode();\n    this.add(this.floor);\n\n    const foam = new Foam(1);\n    foam.position.set(4.5, 0.2, -0.5);\n    foam.visible = true;\n    foam.run();\n    this.add(foam);\n    const foamRight = new Foam(-1);\n    foamRight.position.set(-4.5, 0.2, -0.5);\n    foamRight.visible = true;\n    foamRight.run();\n    this.add(foamRight);\n  }\n\n  ///Is Lily\n  isStaticRow = index => {\n    return index % 2 === 0; //&& (Math.random() * 2 == 0)\n  };\n\n  update = (dt, player) => {\n    if (!this.active) {\n      return;\n    }\n    this.entities.map(entity => this.move({ dt, player, entity }));\n\n    if (!player.moving && !player.ridingOn) {\n      this.entities.map(entity =>\n        this.shouldCheckCollision({ dt, player, entity }),\n      );\n      this.shouldCheckHazardCollision({ player });\n    }\n  };\n\n  move = ({ dt, player, entity }) => {\n    const offset = 11;\n\n    entity.mesh.position.x += entity.speed;\n\n    if (entity.mesh.position.x > offset && entity.speed > 0) {\n      entity.mesh.position.x = -offset;\n    } else if (entity.mesh.position.x < -offset && entity.speed < 0) {\n      entity.mesh.position.x = offset;\n    } else {\n    }\n  };\n\n  getRidableForPosition = position => {\n    if (Math.round(position.z) !== this.position.z) {\n      return null;\n    }\n    const log = this.getCollisionLog(position);\n    return log;\n  };\n\n  // When the player jumps onto a lily or log we want it to be smooth, predict the position ahead of time.\n  getPlayerLowerBouncePositionForEntity = entity => {\n    return entity.top + entity.mid;\n  };\n\n  getPlayerSunkenPosition = () => {\n    return Math.sin(this.sineCount) * 0.08 - 0.2;\n  };\n\n  shouldCheckHazardCollision = ({ player }) => {\n    if (Math.round(player.position.z) === this.position.z && !player.moving) {\n      if (!player.ridingOn) {\n        if (player.isAlive) {\n          this.onCollide(this.floor, 'water');\n        } else {\n          let y = this.getPlayerSunkenPosition();\n          this.sineCount += this.sineInc;\n          player.position.y = y;\n          player.rotation.y += 0.01;\n\n          player.position.x += this.entities[0].speed;\n        }\n      }\n    }\n  };\n\n  getCollisionLog = position => {\n    for (const entity of this.entities) {\n      const log = this.willCollideWithLog2D({ position, entity });\n      if (log) {\n        return log;\n      }\n    }\n  };\n\n  willCollideWithLog2D = ({ position, entity }) => {\n    const { mesh, collisionBox } = entity;\n\n    if (\n      position.x < mesh.position.x + collisionBox &&\n      position.x > mesh.position.x - collisionBox\n    ) {\n      return entity;\n    }\n\n    return null;\n  };\n\n  shouldCheckCollision = ({ player, entity }) => {\n    if (Math.round(player.position.z) === this.position.z && player.isAlive) {\n      const { mesh, collisionBox } = entity;\n\n      if (\n        player.position.x < mesh.position.x + collisionBox &&\n        player.position.x > mesh.position.x - collisionBox\n      ) {\n        player.ridingOn = entity;\n        player.ridingOnOffset = player.position.x - entity.mesh.position.x;\n        this.bounce({ entity, player });\n      }\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}