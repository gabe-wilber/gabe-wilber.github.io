{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import{Asset}from'expo-asset';import{loadAsync}from'expo-font';import{prefetch}from\"./ImageUtils\";export default function cacheAssetsAsync(_ref){var _ref$images=_ref.images,images=_ref$images===void 0?[]:_ref$images,_ref$files=_ref.files,files=_ref$files===void 0?[]:_ref$files,_ref$fonts=_ref.fonts,fonts=_ref$fonts===void 0?[]:_ref$fonts;return Promise.all([].concat(_toConsumableArray(cacheImages(images)),_toConsumableArray(raw(files)),_toConsumableArray(cacheFonts(fonts))));}function raw(files){return files.map(function(file){return Asset.fromModule(file).downloadAsync();});}function cacheImages(images){return images.map(function(image){if(typeof image==='string'){return prefetch(image);}else{return Asset.fromModule(image).downloadAsync();}});}function cacheFonts(fonts){return fonts.map(function(font){return loadAsync(font);});}","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/node_modules/expo-asset-utils/src/cacheAssetsAsync.js"],"names":["Asset","loadAsync","prefetch","cacheAssetsAsync","images","files","fonts","Promise","all","cacheImages","raw","cacheFonts","map","file","fromModule","downloadAsync","image","font"],"mappings":"yEACA,OAASA,KAAT,KAAsB,YAAtB,CACA,OAASC,SAAT,KAA0B,WAA1B,CACA,OAASC,QAAT,oBAQA,cAAe,SAASC,CAAAA,gBAAT,MAIkB,sBAH/BC,MAG+B,CAH/BA,MAG+B,sBAHtB,EAGsB,6BAF/BC,KAE+B,CAF/BA,KAE+B,qBAFvB,EAEuB,4BAD/BC,KAC+B,CAD/BA,KAC+B,qBADvB,EACuB,YAC/B,MAAOC,CAAAA,OAAO,CAACC,GAAR,8BAAgBC,WAAW,CAACL,MAAD,CAA3B,qBAAwCM,GAAG,CAACL,KAAD,CAA3C,qBAAuDM,UAAU,CAACL,KAAD,CAAjE,GAAP,CACD,CAED,QAASI,CAAAA,GAAT,CAAaL,KAAb,CAAmD,CACjD,MAAOA,CAAAA,KAAK,CAACO,GAAN,CAAU,SAAAC,IAAI,QAAIb,CAAAA,KAAK,CAACc,UAAN,CAAiBD,IAAjB,EAAuBE,aAAvB,EAAJ,EAAd,CAAP,CACD,CAED,QAASN,CAAAA,WAAT,CAAqBL,MAArB,CAA+C,CAC7C,MAAOA,CAAAA,MAAM,CAACQ,GAAP,CAAW,SAAAI,KAAK,CAAI,CACzB,GAAI,MAAOA,CAAAA,KAAP,GAAiB,QAArB,CAA+B,CAC7B,MAAOd,CAAAA,QAAQ,CAACc,KAAD,CAAf,CACD,CAFD,IAEO,CACL,MAAOhB,CAAAA,KAAK,CAACc,UAAN,CAAiBE,KAAjB,EAAwBD,aAAxB,EAAP,CACD,CACF,CANM,CAAP,CAOD,CAED,QAASJ,CAAAA,UAAT,CAAoBL,KAApB,CAAkD,CAChD,MAAOA,CAAAA,KAAK,CAACM,GAAN,CAAU,SAAAK,IAAI,QAAIhB,CAAAA,SAAS,CAACgB,IAAD,CAAb,EAAd,CAAP,CACD","sourcesContent":["// @flow\nimport { Asset } from 'expo-asset';\nimport { loadAsync } from 'expo-font';\nimport { prefetch } from './ImageUtils';\n\nexport type CacheOptions = {\n  images: Array,\n  files: Array,\n  fonts: Array,\n};\n\nexport default function cacheAssetsAsync({\n  images = [],\n  files = [],\n  fonts = [],\n}: CacheOptions): Promise<Array> {\n  return Promise.all([...cacheImages(images), ...raw(files), ...cacheFonts(fonts)]);\n}\n\nfunction raw(files: Array<number>): Array<Promise> {\n  return files.map(file => Asset.fromModule(file).downloadAsync());\n}\n\nfunction cacheImages(images: Array): Promise[] {\n  return images.map(image => {\n    if (typeof image === 'string') {\n      return prefetch(image);\n    } else {\n      return Asset.fromModule(image).downloadAsync();\n    }\n  });\n}\n\nfunction cacheFonts(fonts: Array): Array<Promise> {\n  return fonts.map(font => loadAsync(font));\n}\n"]},"metadata":{},"sourceType":"module"}