{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import TextureLoader from\"../TextureLoader\";export function loadTextureAsync(_ref){var asset;return _regeneratorRuntime.async(function loadTextureAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:asset=_ref.asset;return _context.abrupt(\"return\",new Promise(function(resolve,reject){return new TextureLoader().load(asset,resolve,undefined,reject);}));case 2:case\"end\":return _context.stop();}}});}","map":{"version":3,"sources":["../../src/loaders/loadTextureAsync.ts"],"names":[],"mappings":"4DAAA,MAAO,CAAA,aAAP,wBAEA,MAAO,SAAe,CAAA,gBAAf,2IAAkC,KAAlC,MAAkC,KAAlC,iCACE,GAAI,CAAA,OAAJ,CAAY,SAAC,OAAD,CAAU,MAAV,QACjB,IAAI,CAAA,aAAJ,GAAoB,IAApB,CAAyB,KAAzB,CAAgC,OAAhC,CAAyC,SAAzC,CAAoD,MAApD,CADiB,EAAZ,CADF","sourcesContent":["import TextureLoader from '../TextureLoader';\n\nexport async function loadTextureAsync({ asset }): Promise<any> {\n  return new Promise((resolve, reject) =>\n    new TextureLoader().load(asset, resolve, undefined, reject)\n  );\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}