{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";function resolveAsset(fileReference){var urls,_iterator,_isArray,_i,_ref,_file;return _regeneratorRuntime.async(function resolveAsset$(_context){while(1){switch(_context.prev=_context.next){case 0:urls=[];if(!Array.isArray(fileReference)){_context.next=19;break;}_iterator=fileReference,_isArray=Array.isArray(_iterator),_i=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\":\"@@iterator\"]();case 3:if(!_isArray){_context.next=9;break;}if(!(_i>=_iterator.length)){_context.next=6;break;}return _context.abrupt(\"break\",17);case 6:_ref=_iterator[_i++];_context.next=13;break;case 9:_i=_iterator.next();if(!_i.done){_context.next=12;break;}return _context.abrupt(\"break\",17);case 12:_ref=_i.value;case 13:_file=_ref;urls.push(_file);case 15:_context.next=3;break;case 17:_context.next=20;break;case 19:urls.push(fileReference);case 20:return _context.abrupt(\"return\",urls);case 21:case\"end\":return _context.stop();}}});}export function stringFromAsset(asset){return _regeneratorRuntime.async(function stringFromAsset$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:console.warn('ExpoTHREE.stringFromAsset: Not Implemented');return _context2.abrupt(\"return\",'');case 2:case\"end\":return _context2.stop();}}});}export default resolveAsset;","map":{"version":3,"sources":["../src/resolveAsset.web.ts"],"names":[],"mappings":"4DACA,QAAe,CAAA,YAAf,CAA4B,aAA5B,kKACM,IADN,CACoB,EADpB,KAEM,KAAK,CAAC,OAAN,CAAc,aAAd,CAFN,oCAGqB,aAHrB,weAGa,KAHb,MAIM,IAAI,CAAC,IAAL,CAAU,KAAV,EAJN,qEAOI,IAAI,CAAC,IAAL,CAAU,aAAV,EAPJ,wCASS,IATT,iDAYA,MAAO,SAAe,CAAA,eAAf,CAA+B,KAA/B,8HACL,OAAO,CAAC,IAAR,CAAa,4CAAb,EADK,iCAEE,EAFF,iDAKP,cAAe,CAAA,YAAf","sourcesContent":["// Also not implemented\nasync function resolveAsset(fileReference): Promise<any[]> {\n  let urls: any[] = [];\n  if (Array.isArray(fileReference)) {\n    for (let file of fileReference) {\n      urls.push(file);\n    }\n  } else {\n    urls.push(fileReference);\n  }\n  return urls;\n}\n\nexport async function stringFromAsset(asset): Promise<string | void> {\n  console.warn('ExpoTHREE.stringFromAsset: Not Implemented');\n  return '';\n}\n\nexport default resolveAsset;\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}