{"ast":null,"code":"import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import useDimensions from\"../../src/hooks/useDimensions\";import Button from\"../Button\";export default function Banner(props){var renderButton=function renderButton(_ref,key){var onPress=_ref.onPress,source=_ref.source,style=_ref.style;return React.createElement(Button,{key:key,onPress:onPress,imageStyle:[styles.button,style],source:source,style:{marginLeft:8,width:90,flex:undefined}});};var animatedValue=props.animatedValue,style=props.style;var _useDimensions=useDimensions(),width=_useDimensions.window.width;return React.createElement(Animated.View,{style:[styles.container,{minWidth:width,maxWidth:width},style]},React.createElement(Animated.View,{style:[styles.banner,{transform:[{translateX:animatedValue}]}]},React.createElement(Text,{style:styles.text,numberOfLines:2},props.title),props.button&&renderButton(props.button,0)));}var styles=StyleSheet.create({text:{fontSize:18,color:'white',fontFamily:'retro',textAlign:'center'},banner:{flex:1,flexDirection:'row',justifyContent:'center',alignItems:'center'},container:{alignItems:'center',justifyContent:'center',flexDirection:'row',backgroundColor:'red',height:56,paddingHorizontal:8,marginVertical:8},button:{height:56,marginLeft:24}});","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/components/GameOver/Banner.js"],"names":["React","useDimensions","Button","Banner","props","renderButton","key","onPress","source","style","styles","button","marginLeft","width","flex","undefined","animatedValue","window","container","minWidth","maxWidth","banner","transform","translateX","text","title","StyleSheet","create","fontSize","color","fontFamily","textAlign","flexDirection","justifyContent","alignItems","backgroundColor","height","paddingHorizontal","marginVertical"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wOAGA,MAAOC,CAAAA,aAAP,qCACA,MAAOC,CAAAA,MAAP,iBAEA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CACpC,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAA6BC,GAA7B,KAAGC,CAAAA,OAAH,MAAGA,OAAH,CAAYC,MAAZ,MAAYA,MAAZ,CAAoBC,KAApB,MAAoBA,KAApB,OACnB,qBAAC,MAAD,EACE,GAAG,CAAEH,GADP,CAEE,OAAO,CAAEC,OAFX,CAGE,UAAU,CAAE,CAACG,MAAM,CAACC,MAAR,CAAgBF,KAAhB,CAHd,CAIE,MAAM,CAAED,MAJV,CAKE,KAAK,CAAE,CAAEI,UAAU,CAAE,CAAd,CAAiBC,KAAK,CAAE,EAAxB,CAA4BC,IAAI,CAAEC,SAAlC,CALT,EADmB,EAArB,CADoC,GAW5BC,CAAAA,aAX4B,CAWHZ,KAXG,CAW5BY,aAX4B,CAWbP,KAXa,CAWHL,KAXG,CAWbK,KAXa,oBAYNR,aAAa,EAZP,CAYlBY,KAZkB,gBAY5BI,MAZ4B,CAYlBJ,KAZkB,CAapC,MACE,qBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACH,MAAM,CAACQ,SAAR,CAAmB,CAAEC,QAAQ,CAAEN,KAAZ,CAAmBO,QAAQ,CAAEP,KAA7B,CAAnB,CAAyDJ,KAAzD,CAAtB,EACE,oBAAC,QAAD,CAAU,IAAV,EACE,KAAK,CAAE,CACLC,MAAM,CAACW,MADF,CAEL,CACEC,SAAS,CAAE,CAAC,CAAEC,UAAU,CAAEP,aAAd,CAAD,CADb,CAFK,CADT,EAQE,oBAAC,IAAD,EAAM,KAAK,CAAEN,MAAM,CAACc,IAApB,CAA0B,aAAa,CAAE,CAAzC,EACGpB,KAAK,CAACqB,KADT,CARF,CAWGrB,KAAK,CAACO,MAAN,EAAgBN,YAAY,CAACD,KAAK,CAACO,MAAP,CAAe,CAAf,CAX/B,CADF,CADF,CAkBD,CAED,GAAMD,CAAAA,MAAM,CAAGgB,UAAU,CAACC,MAAX,CAAkB,CAC/BH,IAAI,CAAE,CACJI,QAAQ,CAAE,EADN,CAEJC,KAAK,CAAE,OAFH,CAGJC,UAAU,CAAE,OAHR,CAIJC,SAAS,CAAE,QAJP,CADyB,CAO/BV,MAAM,CAAE,CACNP,IAAI,CAAE,CADA,CAENkB,aAAa,CAAE,KAFT,CAGNC,cAAc,CAAE,QAHV,CAINC,UAAU,CAAE,QAJN,CAPuB,CAa/BhB,SAAS,CAAE,CACTgB,UAAU,CAAE,QADH,CAETD,cAAc,CAAE,QAFP,CAGTD,aAAa,CAAE,KAHN,CAITG,eAAe,CAAE,KAJR,CAKTC,MAAM,CAAE,EALC,CAMTC,iBAAiB,CAAE,CANV,CAOTC,cAAc,CAAE,CAPP,CAboB,CAsB/B3B,MAAM,CAAE,CACNyB,MAAM,CAAE,EADF,CAENxB,UAAU,CAAE,EAFN,CAtBuB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Animated, StyleSheet, Text, View } from 'react-native';\n\nimport useDimensions from '../../src/hooks/useDimensions';\nimport Button from '../Button';\n\nexport default function Banner(props) {\n  const renderButton = ({ onPress, source, style }, key) => (\n    <Button\n      key={key}\n      onPress={onPress}\n      imageStyle={[styles.button, style]}\n      source={source}\n      style={{ marginLeft: 8, width: 90, flex: undefined }}\n    />\n  );\n\n  const { animatedValue, style } = props;\n  const { window: { width } } = useDimensions()\n  return (\n    <Animated.View style={[styles.container, { minWidth: width, maxWidth: width }, style]}>\n      <Animated.View\n        style={[\n          styles.banner,\n          {\n            transform: [{ translateX: animatedValue }],\n          },\n        ]}\n      >\n        <Text style={styles.text} numberOfLines={2}>\n          {props.title}\n        </Text>\n        {props.button && renderButton(props.button, 0)}\n      </Animated.View>\n    </Animated.View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    fontSize: 18,\n    color: 'white',\n    fontFamily: 'retro',\n    textAlign: 'center',\n  },\n  banner: {\n    flex: 1,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  container: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'row',\n    backgroundColor: 'red',\n    height: 56,\n    paddingHorizontal: 8,\n    marginVertical: 8,\n  },\n  button: {\n    height: 56,\n    marginLeft: 24,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}