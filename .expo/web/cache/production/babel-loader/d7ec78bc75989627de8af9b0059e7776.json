{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import{MeshPhongMaterial,Box3,CubeGeometry,Group,DoubleSide,Mesh,PlaneBufferGeometry,Object3D}from'three';import Generic from\"./Generic\";var Train=function(_Generic){_inherits(Train,_Generic);function Train(){var _getPrototypeOf2;var _this;_classCallCheck(this,Train);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Train)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getDepth=function(mesh){var box3=new Box3();box3.setFromObject(mesh);return Math.round(box3.max.x-box3.min.x);};_this.withSize=function(){var size=arguments.length>0&&arguments[0]!==undefined?arguments[0]:2;var _train=new Group();var front=_this.getNode('front');_train.add(front);var offset=_this.getDepth(front);for(var i=0;i<size;i++){var middle=_this.getNode('middle');middle.position.x=offset;_train.add(middle);offset+=_this.getDepth(middle);}var back=_this.getNode('back');back.position.x=offset;_train.add(back);return _train;};_this.setup=function _callee(){var train;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:train=_this.globalModels.vehicles.train;_context.next=3;return _regeneratorRuntime.awrap(_this._register('front',_objectSpread({},train[\"front\"],{receiveShadow:true,castShadow:true})));case 3:_context.next=5;return _regeneratorRuntime.awrap(_this._register('middle',_objectSpread({},train[\"middle\"],{receiveShadow:true,castShadow:true})));case 5:_context.next=7;return _regeneratorRuntime.awrap(_this._register('back',_objectSpread({},train[\"back\"],{receiveShadow:true,castShadow:true})));case 7:return _context.abrupt(\"return\",_this.models);case 8:case\"end\":return _context.stop();}}});};return _this;}return Train;}(Generic);export{Train as default};","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/src/Node/Train.js"],"names":["MeshPhongMaterial","Box3","CubeGeometry","Group","DoubleSide","Mesh","PlaneBufferGeometry","Object3D","Generic","Train","getDepth","mesh","box3","setFromObject","Math","round","max","x","min","withSize","size","_train","front","getNode","add","offset","i","middle","position","back","setup","train","globalModels","vehicles","_register","receiveShadow","castShadow","models"],"mappings":"irCAAA,OAASA,iBAAT,CAA4BC,IAA5B,CAAkCC,YAAlC,CAAgDC,KAAhD,CAAuDC,UAAvD,CAAmEC,IAAnE,CAAyEC,mBAAzE,CAA8FC,QAA9F,KAA8G,OAA9G,CAEA,MAAOC,CAAAA,OAAP,iB,GAEqBC,CAAAA,K,0WACnBC,Q,CAAW,SAAAC,IAAI,CAAI,CACjB,GAAIC,CAAAA,IAAI,CAAG,GAAIX,CAAAA,IAAJ,EAAX,CACAW,IAAI,CAACC,aAAL,CAAmBF,IAAnB,EAEA,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWH,IAAI,CAACI,GAAL,CAASC,CAAT,CAAaL,IAAI,CAACM,GAAL,CAASD,CAAjC,CAAP,CACD,C,OAEDE,Q,CAAW,UAAc,IAAbC,CAAAA,IAAa,2DAAN,CAAM,CACvB,GAAMC,CAAAA,MAAM,CAAG,GAAIlB,CAAAA,KAAJ,EAAf,CAEA,GAAMmB,CAAAA,KAAK,CAAG,MAAKC,OAAL,CAAa,OAAb,CAAd,CACAF,MAAM,CAACG,GAAP,CAAWF,KAAX,EAKA,GAAIG,CAAAA,MAAM,CAAG,MAAKf,QAAL,CAAcY,KAAd,CAAb,CAEA,IAAK,GAAII,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGN,IAApB,CAA0BM,CAAC,EAA3B,CAA+B,CAC7B,GAAMC,CAAAA,MAAM,CAAG,MAAKJ,OAAL,CAAa,QAAb,CAAf,CACAI,MAAM,CAACC,QAAP,CAAgBX,CAAhB,CAAoBQ,MAApB,CAEAJ,MAAM,CAACG,GAAP,CAAWG,MAAX,EACAF,MAAM,EAAI,MAAKf,QAAL,CAAciB,MAAd,CAAV,CACD,CACD,GAAME,CAAAA,IAAI,CAAG,MAAKN,OAAL,CAAa,MAAb,CAAb,CACAM,IAAI,CAACD,QAAL,CAAcX,CAAd,CAAkBQ,MAAlB,CACAJ,MAAM,CAACG,GAAP,CAAWK,IAAX,EAEA,MAAOR,CAAAA,MAAP,CACD,C,OAEDS,K,CAAQ,8IAEQC,KAFR,CAGF,MAAKC,YAHH,CAEJC,QAFI,CAEQF,KAFR,kDAKA,MAAKG,SAAL,CAAe,OAAf,kBACDH,KAAK,SADJ,EAEJI,aAAa,CAAE,IAFX,CAGJC,UAAU,CAAE,IAHR,GALA,0DAUA,MAAKF,SAAL,CAAe,QAAf,kBACDH,KAAK,UADJ,EAEJI,aAAa,CAAE,IAFX,CAGJC,UAAU,CAAE,IAHR,GAVA,0DAeA,MAAKF,SAAL,CAAe,MAAf,kBAA4BH,KAAK,QAAjC,EAA2CI,aAAa,CAAE,IAA1D,CAAgEC,UAAU,CAAE,IAA5E,GAfA,yCAiBC,MAAKC,MAjBN,gD,8BAjCyB7B,O,SAAdC,K","sourcesContent":["import { MeshPhongMaterial, Box3, CubeGeometry, Group, DoubleSide, Mesh, PlaneBufferGeometry, Object3D } from 'three';\n\nimport Generic from './Generic';\n\nexport default class Train extends Generic {\n  getDepth = mesh => {\n    let box3 = new Box3();\n    box3.setFromObject(mesh);\n\n    return Math.round(box3.max.x - box3.min.x);\n  };\n\n  withSize = (size = 2) => {\n    const _train = new Group();\n\n    const front = this.getNode('front');\n    _train.add(front);\n\n    //\n\n    // console.log( box.min, box.max, box.size() );\n    let offset = this.getDepth(front);\n    //\n    for (let i = 0; i < size; i++) {\n      const middle = this.getNode('middle');\n      middle.position.x = offset; //TODO: Measure.\n\n      _train.add(middle);\n      offset += this.getDepth(middle);\n    }\n    const back = this.getNode('back');\n    back.position.x = offset;\n    _train.add(back);\n\n    return _train;\n  };\n\n  setup = async () => {\n    const {\n      vehicles: { train },\n    } = this.globalModels;\n\n    await this._register('front', {\n      ...train[`front`],\n      receiveShadow: true,\n      castShadow: true,\n    });\n    await this._register('middle', {\n      ...train[`middle`],\n      receiveShadow: true,\n      castShadow: true,\n    });\n    await this._register('back', { ...train[`back`], receiveShadow: true, castShadow: true });\n\n    return this.models;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}