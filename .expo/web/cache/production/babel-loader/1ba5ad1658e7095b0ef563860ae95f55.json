{"ast":null,"code":"import{AMFLoader}from'three/examples/jsm/loaders/AMFLoader';import{AssimpLoader}from'three/examples/jsm/loaders/AssimpLoader';import{BVHLoader}from'three/examples/jsm/loaders/BVHLoader';import{ColladaLoader}from'three/examples/jsm/loaders/ColladaLoader';import{FBXLoader}from'three/examples/jsm/loaders/FBXLoader';import{GLTFLoader}from'three/examples/jsm/loaders/GLTFLoader';import{MTLLoader}from'three/examples/jsm/loaders/MTLLoader';import{OBJLoader}from'three/examples/jsm/loaders/OBJLoader';import{PCDLoader}from'three/examples/jsm/loaders/PCDLoader';import{PLYLoader}from'three/examples/jsm/loaders/PLYLoader';import{STLLoader}from'three/examples/jsm/loaders/STLLoader';import{TDSLoader}from'three/examples/jsm/loaders/TDSLoader';import{TTFLoader}from'three/examples/jsm/loaders/TTFLoader';import{XLoader}from'three/examples/jsm/loaders/XLoader';function getExtension(uri){var lastUriComponent=uri.split('.').pop();return lastUriComponent.split('?')[0].split('#')[0];}export function loaderClassForUri(uri){var extension=getExtension(uri);return loaderClassForExtension(extension);}export function loaderClassForExtension(extension){if(typeof extension!=='string'){throw new Error('Supplied extension is not a valid string');}switch(extension.toLowerCase()){case'3mf':return TTFLoader;case'amf':return AMFLoader;case'assimp':return AssimpLoader;case'bvh':return BVHLoader;case'ctm':throw new Error('CTMLoader is deprecated. Please load it manually with three.js');case'fbx':return FBXLoader;case'glb':case'gltf':return GLTFLoader;case'max':case'3ds':return TDSLoader;case'pcd':return PCDLoader;case'ply':return PLYLoader;case'obj':return OBJLoader;case'mtl':return MTLLoader;case'dae':return ColladaLoader;case'stl':return STLLoader;case'vtk':case'vtp':throw new Error('VRMLoader is deprecated. Please load it manually with three.js');case'x':return XLoader;default:throw new Error('ExpoTHREE.loaderClassForExtension(): Unrecognized file type '+extension);}}","map":{"version":3,"sources":["../src/loaderClassForExtension.ts"],"names":[],"mappings":"AAAA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,YAAT,KAA6B,yCAA7B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,aAAT,KAA8B,0CAA9B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,UAAT,KAA2B,uCAA3B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,SAAT,KAA0B,sCAA1B,CACA,OAAS,OAAT,KAAwB,oCAAxB,CAEA,QAAS,CAAA,YAAT,CAAsB,GAAtB,CAAiC,CAC/B,GAAM,CAAA,gBAAgB,CAAG,GAAG,CAAC,KAAJ,CAAU,GAAV,EAAe,GAAf,EAAzB,CACA,MAAO,CAAA,gBAAgB,CAAC,KAAjB,CAAuB,GAAvB,EAA4B,CAA5B,EAA+B,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAP,CACD,CAED,MAAM,SAAU,CAAA,iBAAV,CAA4B,GAA5B,CAAuC,CAC3C,GAAM,CAAA,SAAS,CAAG,YAAY,CAAC,GAAD,CAA9B,CACA,MAAO,CAAA,uBAAuB,CAAC,SAAD,CAA9B,CACD,CAED,MAAM,SAAU,CAAA,uBAAV,CAAkC,SAAlC,CAAmD,CACvD,GAAI,MAAO,CAAA,SAAP,GAAqB,QAAzB,CAAmC,CACjC,KAAM,IAAI,CAAA,KAAJ,CAAU,0CAAV,CAAN,CACD,CACD,OAAQ,SAAS,CAAC,WAAV,EAAR,EACE,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,QAAL,CACE,MAAO,CAAA,YAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACE,KAAM,IAAI,CAAA,KAAJ,CACJ,gEADI,CAAN,CAGF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACA,IAAK,MAAL,CACE,MAAO,CAAA,UAAP,CACF,IAAK,KAAL,CACA,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,aAAP,CACF,IAAK,KAAL,CACE,MAAO,CAAA,SAAP,CACF,IAAK,KAAL,CACA,IAAK,KAAL,CACE,KAAM,IAAI,CAAA,KAAJ,CACJ,gEADI,CAAN,CAGF,IAAK,GAAL,CACE,MAAO,CAAA,OAAP,CAKF,QACE,KAAM,IAAI,CAAA,KAAJ,CACJ,+DACE,SAFE,CAAN,CA7CJ,CAkDD","sourcesContent":["import { AMFLoader } from 'three/examples/jsm/loaders/AMFLoader';\nimport { AssimpLoader } from 'three/examples/jsm/loaders/AssimpLoader';\nimport { BVHLoader } from 'three/examples/jsm/loaders/BVHLoader';\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader';\nimport { FBXLoader } from 'three/examples/jsm/loaders/FBXLoader';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\nimport { PCDLoader } from 'three/examples/jsm/loaders/PCDLoader';\nimport { PLYLoader } from 'three/examples/jsm/loaders/PLYLoader';\nimport { STLLoader } from 'three/examples/jsm/loaders/STLLoader';\nimport { TDSLoader } from 'three/examples/jsm/loaders/TDSLoader';\nimport { TTFLoader } from 'three/examples/jsm/loaders/TTFLoader';\nimport { XLoader } from 'three/examples/jsm/loaders/XLoader';\n\nfunction getExtension(uri: string): string {\n  const lastUriComponent = uri.split('.').pop() as string;\n  return lastUriComponent.split('?')[0].split('#')[0];\n}\n\nexport function loaderClassForUri(uri: string): string {\n  const extension = getExtension(uri);\n  return loaderClassForExtension(extension);\n}\n\nexport function loaderClassForExtension(extension: string): any {\n  if (typeof extension !== 'string') {\n    throw new Error('Supplied extension is not a valid string');\n  }\n  switch (extension.toLowerCase()) {\n    case '3mf':\n      return TTFLoader;\n    case 'amf':\n      return AMFLoader;\n    case 'assimp':\n      return AssimpLoader;\n    case 'bvh':\n      return BVHLoader;\n    case 'ctm':\n      throw new Error(\n        'CTMLoader is deprecated. Please load it manually with three.js'\n      );\n    case 'fbx':\n      return FBXLoader;\n    case 'glb':\n    case 'gltf':\n      return GLTFLoader;\n    case 'max':\n    case '3ds':\n      return TDSLoader;\n    case 'pcd':\n      return PCDLoader;\n    case 'ply':\n      return PLYLoader;\n    case 'obj':\n      return OBJLoader;\n    case 'mtl':\n      return MTLLoader;\n    case 'dae':\n      return ColladaLoader;\n    case 'stl':\n      return STLLoader;\n    case 'vtk':\n    case 'vtp':\n      throw new Error(\n        'VRMLoader is deprecated. Please load it manually with three.js'\n      );\n    case 'x':\n      return XLoader;\n\n    // case 'drc':\n    //   if (!THREE.DRACOLoader) require('three/examples/js/loaders/draco/DRACOLoader');\n    //   return THREE.DRACOLoader;\n    default:\n      throw new Error(\n        'ExpoTHREE.loaderClassForExtension(): Unrecognized file type ' +\n          extension\n      );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}