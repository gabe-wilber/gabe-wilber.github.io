{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import ExponentAV from\"../ExponentAV\";var _enabled=true;export function isAudioEnabled(){return _enabled;}export function throwIfAudioIsDisabled(){if(!_enabled){throw new Error('Cannot complete operation because audio is not enabled.');}}export function setIsEnabledAsync(value){return _regeneratorRuntime.async(function setIsEnabledAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_enabled=value;_context.next=3;return _regeneratorRuntime.awrap(ExponentAV.setAudioIsEnabled(value));case 3:case\"end\":return _context.stop();}}});}","map":{"version":3,"sources":["../../src/Audio/AudioAvailability.ts"],"names":[],"mappings":"4DAAA,MAAO,CAAA,UAAP,qBAEA,GAAI,CAAA,QAAQ,CAAG,IAAf,CAEA,MAAM,SAAU,CAAA,cAAV,EAAwB,CAC5B,MAAO,CAAA,QAAP,CACD,CAED,MAAM,SAAU,CAAA,sBAAV,EAAgC,CACpC,GAAI,CAAC,QAAL,CAAe,CACb,KAAM,IAAI,CAAA,KAAJ,CAAU,yDAAV,CAAN,CACD,CACF,CAED,MAAO,SAAe,CAAA,iBAAf,CAAiC,KAAjC,6HACL,QAAQ,CAAG,KAAX,CADK,iDAEC,UAAU,CAAC,iBAAX,CAA6B,KAA7B,CAFD","sourcesContent":["import ExponentAV from '../ExponentAV';\n\nlet _enabled = true;\n\nexport function isAudioEnabled(): boolean {\n  return _enabled;\n}\n\nexport function throwIfAudioIsDisabled(): void {\n  if (!_enabled) {\n    throw new Error('Cannot complete operation because audio is not enabled.');\n  }\n}\n\nexport async function setIsEnabledAsync(value: boolean): Promise<void> {\n  _enabled = value;\n  await ExponentAV.setAudioIsEnabled(value);\n  // TODO : We immediately pause all players when disabled, but we do not resume all shouldPlay\n  // players when enabled. Perhaps for completeness we should allow this; the design of the\n  // enabling API is for people to enable / disable this audio library, but I think that it should\n  // intuitively also double as a global pause/resume.\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}