{"ast":null,"code":"import React,{Component}from'react';import Picker from\"react-native-web/dist/exports/Picker\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableWithoutFeedback from\"react-native-web/dist/exports/TouchableWithoutFeedback\";import GameContext from\"../context/GameContext\";import Characters from\"../src/Characters\";export default function CharacterPicker(props){var _React$useContext=React.useContext(GameContext),setCharacter=_React$useContext.setCharacter,character=_React$useContext.character;return React.createElement(TouchableWithoutFeedback,{onPress:function onPress(){}},React.createElement(Picker,{selectedValue:character,style:styles.picker,onValueChange:function onValueChange(itemValue,itemIndex){setCharacter(itemValue);}},Object.keys(Characters).map(function(id){return React.createElement(Picker.Item,{key:id,label:Characters[id].name,value:Characters[id].id});})));}var styles=StyleSheet.create({picker:{height:48,minWidth:100,borderWidth:2,borderColor:'white',backgroundColor:'#75C5F4',color:'white',fontFamily:'retro'}});","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/components/CharacterPicker.js"],"names":["React","Component","GameContext","Characters","CharacterPicker","props","useContext","setCharacter","character","styles","picker","itemValue","itemIndex","Object","keys","map","id","name","StyleSheet","create","height","minWidth","borderWidth","borderColor","backgroundColor","color","fontFamily"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,uNAGA,MAAOC,CAAAA,WAAP,8BACA,MAAOC,CAAAA,UAAP,yBAGA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,uBACPL,KAAK,CAACM,UAAN,CAAiBJ,WAAjB,CADO,CACnCK,YADmC,mBACnCA,YADmC,CACrBC,SADqB,mBACrBA,SADqB,CAG3C,MACI,qBAAC,wBAAD,EAA0B,OAAO,CAAE,kBAAM,CAAG,CAA5C,EACI,oBAAC,MAAD,EACI,aAAa,CAAEA,SADnB,CAEI,KAAK,CAAEC,MAAM,CAACC,MAFlB,CAGI,aAAa,CAAE,uBAACC,SAAD,CAAYC,SAAZ,CAA0B,CACrCL,YAAY,CAACI,SAAD,CAAZ,CACH,CALL,EAMKE,MAAM,CAACC,IAAP,CAAYX,UAAZ,EAAwBY,GAAxB,CAA4B,SAAAC,EAAE,QAC3B,qBAAC,MAAD,CAAQ,IAAR,EAAa,GAAG,CAAEA,EAAlB,CAAsB,KAAK,CAAEb,UAAU,CAACa,EAAD,CAAV,CAAeC,IAA5C,CAAkD,KAAK,CAAEd,UAAU,CAACa,EAAD,CAAV,CAAeA,EAAxE,EAD2B,EAA9B,CANL,CADJ,CADJ,CAcH,CAGD,GAAMP,CAAAA,MAAM,CAAGS,UAAU,CAACC,MAAX,CAAkB,CAC7BT,MAAM,CAAE,CACJU,MAAM,CAAE,EADJ,CAEJC,QAAQ,CAAE,GAFN,CAGJC,WAAW,CAAE,CAHT,CAIJC,WAAW,CAAE,OAJT,CAKJC,eAAe,CAAE,SALb,CAMJC,KAAK,CAAE,OANH,CAOJC,UAAU,CAAE,OAPR,CADqB,CAAlB,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Picker, StyleSheet, TouchableWithoutFeedback } from 'react-native';\n\nimport GameContext from '../context/GameContext';\nimport Characters from '../src/Characters';\n\n\nexport default function CharacterPicker(props) {\n    const { setCharacter, character } = React.useContext(GameContext)\n\n    return (\n        <TouchableWithoutFeedback onPress={() => { }}>\n            <Picker\n                selectedValue={character}\n                style={styles.picker}\n                onValueChange={(itemValue, itemIndex) => {\n                    setCharacter(itemValue);\n                }}>\n                {Object.keys(Characters).map(id => (\n                    <Picker.Item key={id} label={Characters[id].name} value={Characters[id].id} />\n                ))}\n            </Picker>\n        </TouchableWithoutFeedback>\n    );\n}\n\n\nconst styles = StyleSheet.create({\n    picker: { \n        height: 48, \n        minWidth: 100, \n        borderWidth: 2, \n        borderColor: 'white', \n        backgroundColor: '#75C5F4', \n        color: 'white', \n        fontFamily: 'retro' \n    }\n});\n"]},"metadata":{},"sourceType":"module"}