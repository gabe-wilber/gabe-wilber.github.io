{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{swipeDirections}from\"../components/GestureView\";import AudioManager from\"../src/AudioManager\";import ModelLoader from\"../src/ModelLoader\";import Characters from\"./Characters\";import{CrossyCamera,CrossyGameMap,CrossyRenderer,CrossyScene}from\"./CrossyGame\";import CrossyPlayer from\"./CrossyPlayer\";import{CAMERA_EASING,DEBUG_CAMERA_CONTROLS,groundLevel,PI_2,sceneColor,startingRow}from\"./GameSettings\";var initialState={id:Characters.bacon.id,name:Characters.bacon.name,index:Characters.bacon.index};var normalizeAngle=function normalizeAngle(angle){return Math.atan2(Math.sin(angle),Math.cos(angle));};var Engine=function(){function Engine(){var _this=this;_classCallCheck(this,Engine);this.updateScale=function(){var _Dimensions$get=Dimensions.get('window'),width=_Dimensions$get.width,height=_Dimensions$get.height,scale=_Dimensions$get.scale;if(_this.camera){_this.camera.updateScale({width:width,height:height,scale:scale});}if(_this.renderer){_this.renderer.setSize(width*scale,height*scale);}};this.setupGame=function(character){_this.scene=new CrossyScene({});_this.camera=new CrossyCamera();if(DEBUG_CAMERA_CONTROLS){}_this.scene.worldWithCamera.position.z=-startingRow;_this.updateScale();_this.gameMap=new CrossyGameMap({heroWidth:0.7,scene:_this.scene,onCollide:_this.onCollide});_this.camCount=0;_this._hero=new CrossyPlayer(character);_this.scene.world.add(_this._hero);_this.scene.createParticles();};this.onCollide=function _callee(){var obstacle,type,collision,_args=arguments;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:obstacle=_args.length>0&&_args[0]!==undefined?_args[0]:{};type=_args.length>1&&_args[1]!==undefined?_args[1]:'feathers';collision=_args.length>2?_args[2]:undefined;if(!_this.isGameEnded()){_context.next=5;break;}return _context.abrupt(\"return\");case 5:_this._hero.isAlive=false;_this._hero.stopIdle();if(!(collision==='car')){_context.next=12;break;}AudioManager.playCarHitSound();AudioManager.playDeathSound();_context.next=16;break;case 12:if(!(collision==='train')){_context.next=16;break;}_context.next=15;return _regeneratorRuntime.awrap(AudioManager.playAsync(AudioManager.sounds.train.die[\"0\"]));case 15:AudioManager.playDeathSound();case 16:_this.scene.useParticle(_this._hero,type,obstacle.speed);_this.scene.rumble();_this.gameOver();case 19:case\"end\":return _context.stop();}}});};this.init=function(){_this.onGameInit();_this.camera.position.z=1;_this._hero.reset();_this.scene.resetParticles(_this._hero.position);_this.camCount=0;_this.gameMap.reset();_this._hero.idle();_this.gameMap.init();_this.onGameReady();};this.forwardScene=function(){_this.scene.world.position.z-=(_this._hero.position.z-startingRow+_this.scene.world.position.z)*CAMERA_EASING;_this.scene.world.position.x=-Math.min(2,Math.max(-2,_this.scene.world.position.x+(_this._hero.position.x-_this.scene.world.position.x)*CAMERA_EASING));if(-_this.scene.world.position.z-_this.camCount>1.0){_this.camCount=-_this.scene.world.position.z;_this.gameMap.newRow();}};this.gameOver=function(){_this._hero.moving=false;_this._hero.stopAnimations();_this.onGameEnded();};this.tick=function(dt){_this.gameMap.tick(dt,_this._hero);if(!_this._hero.moving){_this._hero.moveOnEntity();_this._hero.moveOnCar();_this.checkIfUserHasFallenOutOfFrame();}_this.forwardScene();};this.checkIfUserHasFallenOutOfFrame=function(){if(_this.isGameEnded()){return;}if(_this._hero.position.z<_this.camera.position.z-1){_this.scene.rumble();_this.gameOver();AudioManager.playDeathSound();}if(_this._hero.position.x<-5||_this._hero.position.x>5){_this.scene.rumble();_this.gameOver();AudioManager.playDeathSound();}};this.updateScore=function(){var position=Math.max(Math.floor(_this._hero.position.z)-8,0);_this.onUpdateScore(position);};this.moveWithDirection=function(direction){if(_this.isGameEnded()){return;}var SWIPE_UP=swipeDirections.SWIPE_UP,SWIPE_DOWN=swipeDirections.SWIPE_DOWN,SWIPE_LEFT=swipeDirections.SWIPE_LEFT,SWIPE_RIGHT=swipeDirections.SWIPE_RIGHT;_this._hero.ridingOn=null;if(!_this._hero.initialPosition){_this._hero.initialPosition=_this._hero.position;_this._hero.targetPosition=_this._hero.initialPosition;}_this._hero.skipPendingMovement();var velocity={x:0,z:0};_this._hero.targetRotation=normalizeAngle(_this._hero.rotation.y);switch(direction){case SWIPE_LEFT:{_this._hero.targetRotation=PI_2;velocity={x:1,z:0};_this._hero.targetPosition={x:_this._hero.initialPosition.x+1,y:_this._hero.initialPosition.y,z:_this._hero.initialPosition.z};_this._hero.moving=true;}break;case SWIPE_RIGHT:{if(_this._hero.targetPosition===0){_this._hero.targetPosition=-PI_2;}else if((_this._hero.targetRotation|0)!==-(PI_2|0)&&(_this._hero.targetRotation|0)!==(Math.PI+PI_2|0)){_this._hero.targetRotation=Math.PI+PI_2;}velocity={x:-1,z:0};_this._hero.targetPosition={x:_this._hero.initialPosition.x-1,y:_this._hero.initialPosition.y,z:_this._hero.initialPosition.z};_this._hero.moving=true;}break;case SWIPE_UP:{_this._hero.targetRotation=0;var rowObject=_this.gameMap.getRow(_this._hero.initialPosition.z)||{};if(rowObject.type==='road'){AudioManager.playPassiveCarSound();}var shouldRound=true;velocity={x:0,z:1};_this._hero.targetPosition={x:_this._hero.initialPosition.x,y:_this._hero.initialPosition.y,z:_this._hero.initialPosition.z+1};if(shouldRound){_this._hero.targetPosition.x=Math.round(_this._hero.targetPosition.x);var ridingOn=_this._hero.ridingOn;if(ridingOn&&ridingOn.dir){if(ridingOn.dir<0){_this._hero.targetPosition.x=Math.floor(_this._hero.targetPosition.x);}else if(ridingOn.dir>0){_this._hero.targetPosition.x=Math.ceil(_this._hero.targetPosition.x);}else{_this._hero.targetPosition.x=Math.round(_this._hero.targetPosition.x);}}}_this._hero.moving=true;}break;case SWIPE_DOWN:{_this._hero.targetRotation=Math.PI;var row=(_this.gameMap.getRow(_this._hero.initialPosition.z)||{}).type;var _shouldRound=true;velocity={x:0,z:-1};_this._hero.targetPosition={x:_this._hero.initialPosition.x,y:_this._hero.initialPosition.y,z:_this._hero.initialPosition.z-1};if(_shouldRound){_this._hero.targetPosition.x=Math.round(_this._hero.targetPosition.x);var _ridingOn=_this._hero.ridingOn;if(_ridingOn&&_ridingOn.dir){if(_ridingOn.dir<0){_this._hero.targetPosition.x=Math.floor(_this._hero.targetPosition.x);}else if(_ridingOn.dir>0){_this._hero.targetPosition.x=Math.ceil(_this._hero.targetPosition.x);}else{_this._hero.targetPosition.x=Math.round(_this._hero.targetPosition.x);}}}_this._hero.moving=true;}break;}if(_this.gameMap.treeCollision(_this._hero.targetPosition)){_this._hero.targetPosition={x:_this._hero.initialPosition.x,y:_this._hero.initialPosition.y,z:_this._hero.initialPosition.z};_this._hero.moving=false;}var targetRow=_this.gameMap.getRow(_this._hero.initialPosition.z+velocity.z)||{};var finalY=targetRow.entity.top||groundLevel;if(targetRow.type==='water'){var ridable=targetRow.entity.getRidableForPosition(_this._hero.targetPosition);if(!ridable){finalY=targetRow.entity.getPlayerSunkenPosition();}else{finalY=targetRow.entity.getPlayerLowerBouncePositionForEntity(ridable);}}AudioManager.playMoveSound();_this._hero.targetPosition.y=finalY;_this._hero.commitMovementAnimations({onComplete:function onComplete(){return _this.updateScore();}});};this.beginMoveWithDirection=function(){if(_this.isGameEnded()){return;}_this._hero.runPosieAnimation();};this._onGLContextCreate=function _callee2(gl){var width,height;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:width=gl.drawingBufferWidth,height=gl.drawingBufferHeight;_this.renderer=new CrossyRenderer({gl:gl,antialias:true,width:width,height:height,clearColor:sceneColor});_this.unpause();case 3:case\"end\":return _context2.stop();}}});};}_createClass(Engine,[{key:\"isGameEnded\",value:function isGameEnded(){return!this._hero.isAlive||this._isGameStateEnded();}},{key:\"pause\",value:function pause(){cancelAnimationFrame(this.raf);}},{key:\"unpause\",value:function unpause(){var _this2=this;var render=function render(){_this2.raf=requestAnimationFrame(render);var time=Date.now();_this2.tick(time);_this2.renderer.render(_this2.scene,_this2.camera);_this2.renderer.__gl.endFrameEXP();};render();}}]);return Engine;}();export{Engine as default};","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/src/GameEngine.js"],"names":["swipeDirections","AudioManager","ModelLoader","Characters","CrossyCamera","CrossyGameMap","CrossyRenderer","CrossyScene","CrossyPlayer","CAMERA_EASING","DEBUG_CAMERA_CONTROLS","groundLevel","PI_2","sceneColor","startingRow","initialState","id","bacon","name","index","normalizeAngle","angle","Math","atan2","sin","cos","Engine","updateScale","Dimensions","get","width","height","scale","camera","renderer","setSize","setupGame","character","scene","worldWithCamera","position","z","gameMap","heroWidth","onCollide","camCount","_hero","world","add","createParticles","obstacle","type","collision","isGameEnded","isAlive","stopIdle","playCarHitSound","playDeathSound","playAsync","sounds","train","die","useParticle","speed","rumble","gameOver","init","onGameInit","reset","resetParticles","idle","onGameReady","forwardScene","x","min","max","newRow","moving","stopAnimations","onGameEnded","tick","dt","moveOnEntity","moveOnCar","checkIfUserHasFallenOutOfFrame","updateScore","floor","onUpdateScore","moveWithDirection","direction","SWIPE_UP","SWIPE_DOWN","SWIPE_LEFT","SWIPE_RIGHT","ridingOn","initialPosition","targetPosition","skipPendingMovement","velocity","targetRotation","rotation","y","PI","rowObject","getRow","playPassiveCarSound","shouldRound","round","dir","ceil","row","treeCollision","targetRow","finalY","entity","top","ridable","getRidableForPosition","getPlayerSunkenPosition","getPlayerLowerBouncePositionForEntity","playMoveSound","commitMovementAnimations","onComplete","beginMoveWithDirection","runPosieAnimation","_onGLContextCreate","gl","drawingBufferWidth","drawingBufferHeight","antialias","clearColor","unpause","_isGameStateEnded","cancelAnimationFrame","raf","render","requestAnimationFrame","time","Date","now","__gl","endFrameEXP"],"mappings":"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","sourcesContent":["import { Dimensions } from 'react-native';\n\nimport { swipeDirections } from '../components/GestureView';\nimport AudioManager from '../src/AudioManager';\nimport ModelLoader from '../src/ModelLoader';\nimport Characters from './Characters';\nimport { CrossyCamera, CrossyGameMap, CrossyRenderer, CrossyScene } from './CrossyGame';\nimport CrossyPlayer from './CrossyPlayer';\nimport { CAMERA_EASING, DEBUG_CAMERA_CONTROLS, groundLevel, PI_2, sceneColor, startingRow } from './GameSettings';\n\nconst initialState = {\n  id: Characters.bacon.id,\n  name: Characters.bacon.name,\n  index: Characters.bacon.index,\n};\n\nconst normalizeAngle = angle => {\n  return Math.atan2(Math.sin(angle), Math.cos(angle));\n};\n\nexport default class Engine {\n  updateScale = () => {\n    const { width, height, scale } = Dimensions.get('window');\n    if (this.camera) {\n      this.camera.updateScale({ width, height, scale });\n    }\n    if (this.renderer) {\n      this.renderer.setSize(width * scale, height * scale);\n    }\n  };\n\n  setupGame = (character) => {\n    this.scene = new CrossyScene({ });\n\n    this.camera = new CrossyCamera();\n\n    if (DEBUG_CAMERA_CONTROLS) {\n      // this.debugControls = new THREE.OrbitControls(this.camera);\n    }\n\n    this.scene.worldWithCamera.position.z = -startingRow;\n\n    this.updateScale();\n\n    this.gameMap = new CrossyGameMap({\n      heroWidth: 0.7,\n      scene: this.scene,\n      onCollide: this.onCollide,\n    });\n\n    this.camCount = 0;\n\n    // Mesh\n    this._hero = new CrossyPlayer(character);\n\n    this.scene.world.add(this._hero);\n\n    this.scene.createParticles();\n  };\n\n  isGameEnded() {\n    return !this._hero.isAlive || this._isGameStateEnded()\n  }\n\n  onCollide = async (obstacle = {}, type = 'feathers', collision) => {\n    if (this.isGameEnded()) {\n      return;\n    }\n    this._hero.isAlive = false;\n    this._hero.stopIdle();\n    if (collision === 'car') {\n      AudioManager.playCarHitSound();\n      AudioManager.playDeathSound();\n    } else if (collision === 'train') {\n      await AudioManager.playAsync(AudioManager.sounds.train.die[`0`]);\n      AudioManager.playDeathSound();\n    }\n    this.scene.useParticle(this._hero, type, obstacle.speed);\n    this.scene.rumble();\n    this.gameOver();\n  };\n\n  // Setup initial scene\n  init = () => {\n    this.onGameInit();\n\n    this.camera.position.z = 1;\n    this._hero.reset();\n\n    this.scene.resetParticles(this._hero.position);\n\n    this.camCount = 0;\n\n    this.gameMap.reset();\n\n    this._hero.idle();\n    this.gameMap.init();\n\n    this.onGameReady();\n  };\n\n  // Move scene forward\n  forwardScene = () => {\n    this.scene.world.position.z -=\n      (this._hero.position.z - startingRow + this.scene.world.position.z) *\n      CAMERA_EASING;\n    this.scene.world.position.x = -Math.min(\n      2,\n      Math.max(\n        -2,\n        this.scene.world.position.x +\n        (this._hero.position.x - this.scene.world.position.x) * CAMERA_EASING,\n      ),\n    );\n\n    // normal camera speed\n    if (-this.scene.world.position.z - this.camCount > 1.0) {\n      this.camCount = -this.scene.world.position.z;\n      this.gameMap.newRow();\n    }\n  };\n\n  // Reset variables, restart game\n  gameOver = () => {\n    this._hero.moving = false;\n    // Stop player from finishing a movement\n    this._hero.stopAnimations();\n    this.onGameEnded();\n    // this.gameState = State.Game.gameOver;\n\n    // this.props.setGameState(this.gameState);\n  };\n\n  tick = dt => {\n    // this.drive();\n\n    this.gameMap.tick(dt, this._hero);\n\n    if (!this._hero.moving) {\n      this._hero.moveOnEntity();\n      this._hero.moveOnCar();\n      this.checkIfUserHasFallenOutOfFrame();\n    }\n    this.forwardScene();\n  };\n\n  checkIfUserHasFallenOutOfFrame = () => {\n    if (this.isGameEnded()) {\n      return;\n    }\n    if (this._hero.position.z < this.camera.position.z - 1) {\n      this.scene.rumble();\n      this.gameOver();\n      AudioManager.playDeathSound();\n    }\n\n    // Check if offscreen\n    if (this._hero.position.x < -5 || this._hero.position.x > 5) {\n      this.scene.rumble();\n      this.gameOver();\n      AudioManager.playDeathSound();\n    }\n  };\n\n  pause() {\n    cancelAnimationFrame(this.raf);\n  }\n\n  unpause() {\n    const render = () => {\n      this.raf = requestAnimationFrame(render);\n      const time = Date.now();\n      this.tick(time);\n      this.renderer.render(this.scene, this.camera);\n\n      // NOTE: At the end of each frame, notify `Expo.GLView` with the below\n      this.renderer.__gl.endFrameEXP();\n    };\n    render();\n  }\n\n  updateScore = () => {\n    const position = Math.max(Math.floor(this._hero.position.z) - 8, 0);\n    this.onUpdateScore(position);\n  };\n\n  moveWithDirection = direction => {\n    if (this.isGameEnded()) {\n      return;\n    }\n\n    const { SWIPE_UP, SWIPE_DOWN, SWIPE_LEFT, SWIPE_RIGHT } = swipeDirections;\n\n    this._hero.ridingOn = null;\n\n    if (!this._hero.initialPosition) {\n      this._hero.initialPosition = this._hero.position;\n      this._hero.targetPosition = this._hero.initialPosition;\n    }\n\n    this._hero.skipPendingMovement();\n\n    let velocity = { x: 0, z: 0 };\n\n    this._hero.targetRotation = normalizeAngle(this._hero.rotation.y);\n    // const normalizedRotation = normalizeAngle(this._hero.rotation.y)\n    switch (direction) {\n      case SWIPE_LEFT:\n        {\n          this._hero.targetRotation = PI_2; // calculateRotation(targetRotation, Math.PI / 2);\n\n          velocity = { x: 1, z: 0 };\n\n          this._hero.targetPosition = {\n            x: this._hero.initialPosition.x + 1,\n            y: this._hero.initialPosition.y,\n            z: this._hero.initialPosition.z,\n          };\n          this._hero.moving = true;\n        }\n        break;\n      case SWIPE_RIGHT:\n        {\n          if (this._hero.targetPosition === 0) {\n            this._hero.targetPosition = -PI_2;\n          } else if (\n            (this._hero.targetRotation | 0) !== -(PI_2 | 0) &&\n            (this._hero.targetRotation | 0) !== ((Math.PI + PI_2) | 0)\n          ) {\n            this._hero.targetRotation = Math.PI + PI_2;\n          }\n          velocity = { x: -1, z: 0 };\n\n          this._hero.targetPosition = {\n            x: this._hero.initialPosition.x - 1,\n            y: this._hero.initialPosition.y,\n            z: this._hero.initialPosition.z,\n          };\n          this._hero.moving = true;\n        }\n        break;\n      case SWIPE_UP:\n        {\n          this._hero.targetRotation = 0;\n          let rowObject =\n            this.gameMap.getRow(this._hero.initialPosition.z) || {};\n          if (rowObject.type === 'road') {\n            AudioManager.playPassiveCarSound();\n          }\n\n          let shouldRound = true; // rowObject.type !== 'water';\n          velocity = { x: 0, z: 1 };\n\n          this._hero.targetPosition = {\n            x: this._hero.initialPosition.x,\n            y: this._hero.initialPosition.y,\n            z: this._hero.initialPosition.z + 1,\n          };\n\n          if (shouldRound) {\n            this._hero.targetPosition.x = Math.round(\n              this._hero.targetPosition.x,\n            );\n            const { ridingOn } = this._hero;\n            if (ridingOn && ridingOn.dir) {\n              if (ridingOn.dir < 0) {\n                this._hero.targetPosition.x = Math.floor(\n                  this._hero.targetPosition.x,\n                );\n              } else if (ridingOn.dir > 0) {\n                this._hero.targetPosition.x = Math.ceil(\n                  this._hero.targetPosition.x,\n                );\n              } else {\n                this._hero.targetPosition.x = Math.round(\n                  this._hero.targetPosition.x,\n                );\n              }\n            }\n          }\n\n          this._hero.moving = true;\n        }\n        break;\n      case SWIPE_DOWN:\n        {\n          this._hero.targetRotation = Math.PI;\n          const row = (this.gameMap.getRow(this._hero.initialPosition.z) || {})\n            .type;\n          let shouldRound = true; //row !== 'water';\n          velocity = { x: 0, z: -1 };\n\n          this._hero.targetPosition = {\n            x: this._hero.initialPosition.x,\n            y: this._hero.initialPosition.y,\n            z: this._hero.initialPosition.z - 1,\n          };\n          if (shouldRound) {\n            this._hero.targetPosition.x = Math.round(\n              this._hero.targetPosition.x,\n            );\n            const { ridingOn } = this._hero;\n            if (ridingOn && ridingOn.dir) {\n              if (ridingOn.dir < 0) {\n                this._hero.targetPosition.x = Math.floor(\n                  this._hero.targetPosition.x,\n                );\n              } else if (ridingOn.dir > 0) {\n                this._hero.targetPosition.x = Math.ceil(\n                  this._hero.targetPosition.x,\n                );\n              } else {\n                this._hero.targetPosition.x = Math.round(\n                  this._hero.targetPosition.x,\n                );\n              }\n            }\n          }\n          this._hero.moving = true;\n        }\n        break;\n    }\n\n    // Check collision using the computed movement.\n    if (this.gameMap.treeCollision(this._hero.targetPosition)) {\n      // If we collide with an object, then reset the target position so the character just jumps up.\n      this._hero.targetPosition = {\n        x: this._hero.initialPosition.x,\n        y: this._hero.initialPosition.y,\n        z: this._hero.initialPosition.z,\n      };\n      this._hero.moving = false;\n    }\n\n    const targetRow =\n      this.gameMap.getRow(this._hero.initialPosition.z + velocity.z) || {};\n    let finalY = targetRow.entity.top || groundLevel;\n    // If the next move is into the river, then we want to jump into it.\n    if (targetRow.type === 'water') {\n      const ridable = targetRow.entity.getRidableForPosition(\n        this._hero.targetPosition,\n      );\n      if (!ridable) {\n        finalY = targetRow.entity.getPlayerSunkenPosition();\n      } else {\n        finalY = targetRow.entity.getPlayerLowerBouncePositionForEntity(\n          ridable,\n        );\n      }\n    }\n\n    AudioManager.playMoveSound();\n\n    this._hero.targetPosition.y = finalY;\n\n    this._hero.commitMovementAnimations({\n      onComplete: () => this.updateScore(),\n    });\n  };\n\n  beginMoveWithDirection = () => {\n    if (this.isGameEnded()) {\n      return;\n    }\n    this._hero.runPosieAnimation();\n  };\n\n  _onGLContextCreate = async gl => {\n    const { drawingBufferWidth: width, drawingBufferHeight: height } = gl;\n\n    this.renderer = new CrossyRenderer({\n      gl,\n      antialias: true,\n      width,\n      height,\n      clearColor: sceneColor,\n    });\n\n    this.unpause();\n  };\n}\n"]},"metadata":{},"sourceType":"module"}