{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import*as React from'react';import StatusBar from\"react-native-web/dist/exports/StatusBar\";import AsyncStorage from\"react-native-web/dist/exports/AsyncStorage\";import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";import GameContext from\"./GameContext\";var STORAGE_KEY='@BouncyBacon:Character';var SHOULD_REHYDRATE=true;var defaultState={character:'bacon',highscore:0};function cacheAsync(value){return _regeneratorRuntime.async(function cacheAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(AsyncStorage.setItem(STORAGE_KEY,JSON.stringify(value)));case 2:case\"end\":return _context.stop();}}});}function rehydrateAsync(){var item,data;return _regeneratorRuntime.async(function rehydrateAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(!SHOULD_REHYDRATE||!AsyncStorage)){_context2.next=2;break;}return _context2.abrupt(\"return\",defaultState);case 2:_context2.prev=2;_context2.next=5;return _regeneratorRuntime.awrap(AsyncStorage.getItem(STORAGE_KEY));case 5:item=_context2.sent;data=JSON.parse(item);return _context2.abrupt(\"return\",data);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);return _context2.abrupt(\"return\",defaultState);case 13:case\"end\":return _context2.stop();}}},null,null,[[2,10]]);}export default function GameProvider(_ref){var children=_ref.children;var _React$useState=React.useState(defaultState.character),_React$useState2=_slicedToArray(_React$useState,2),character=_React$useState2[0],_setCharacter=_React$useState2[1];var _React$useState3=React.useState(defaultState.highscore),_React$useState4=_slicedToArray(_React$useState3,2),highscore=_React$useState4[0],_setHighscore=_React$useState4[1];React.useEffect(function(){var parseModulesAsync=function parseModulesAsync(){var _ref2,_character,_highscore;return _regeneratorRuntime.async(function parseModulesAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return _regeneratorRuntime.awrap(rehydrateAsync());case 3:_ref2=_context3.sent;_character=_ref2.character;_highscore=_ref2.highscore;_setCharacter(_character);_setHighscore(_highscore);_context3.next=12;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);case 12:case\"end\":return _context3.stop();}}},null,null,[[0,10]]);};parseModulesAsync();},[]);return React.createElement(GameContext.Provider,{value:{character:character,setCharacter:function setCharacter(character){_setCharacter(character);cacheAsync({character:character,highscore:highscore});},highscore:highscore,setHighscore:function setHighscore(highscore){_setHighscore(highscore);cacheAsync({character:character,highscore:highscore});}}},children);}","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/context/GameProvider.js"],"names":["React","GameContext","STORAGE_KEY","SHOULD_REHYDRATE","defaultState","character","highscore","cacheAsync","value","AsyncStorage","setItem","JSON","stringify","rehydrateAsync","getItem","item","data","parse","GameProvider","children","useState","setCharacter","setHighscore","useEffect","parseModulesAsync"],"mappings":"6HAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,sPAGA,MAAOC,CAAAA,WAAP,qBAIA,GAAMC,CAAAA,WAAW,CAAG,wBAApB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,IAAzB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CAAEC,SAAS,CAAE,OAAb,CAAsBC,SAAS,CAAE,CAAjC,CAArB,CAEA,QAAeC,CAAAA,UAAf,CAA0BC,KAA1B,uKACUC,YAAY,CAACC,OAAb,CAAqBR,WAArB,CAAkCS,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAAlC,CADV,gDAIA,QAAeK,CAAAA,cAAf,iJACQ,CAACV,gBAAD,EAAqB,CAACM,YAD9B,4DAEeL,YAFf,4EAK2BK,YAAY,CAACK,OAAb,CAAqBZ,WAArB,CAL3B,SAKca,IALd,gBAMcC,IANd,CAMqBL,IAAI,CAACM,KAAL,CAAWF,IAAX,CANrB,kCAOeC,IAPf,gGASeZ,YATf,qEAaA,cAAe,SAASc,CAAAA,YAAT,MAAoC,IAAZC,CAAAA,QAAY,MAAZA,QAAY,qBAEbnB,KAAK,CAACoB,QAAN,CAC9BhB,YAAY,CAACC,SADiB,CAFa,oDAExCA,SAFwC,qBAE7BgB,aAF6B,0CAKbrB,KAAK,CAACoB,QAAN,CAC9BhB,YAAY,CAACE,SADiB,CALa,qDAKxCA,SALwC,qBAK7BgB,aAL6B,qBAS/CtB,KAAK,CAACuB,SAAN,CAAgB,UAAM,CAClB,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,oOAEqBX,cAAc,EAFnC,8BAEVR,UAFU,OAEVA,SAFU,CAECC,UAFD,OAECA,SAFD,CAGlBe,aAAY,CAAChB,UAAD,CAAZ,CACAiB,aAAY,CAAChB,UAAD,CAAZ,CAJkB,wJAA1B,CASAkB,iBAAiB,GACpB,CAXD,CAWG,EAXH,EAaA,MACI,qBAAC,WAAD,CAAa,QAAb,EACI,KAAK,CAAE,CACHnB,SAAS,CAATA,SADG,CAEHgB,YAAY,CAAE,sBAAAhB,SAAS,CAAI,CACvBgB,aAAY,CAAChB,SAAD,CAAZ,CACAE,UAAU,CAAC,CAAEF,SAAS,CAATA,SAAF,CAAaC,SAAS,CAATA,SAAb,CAAD,CAAV,CACH,CALE,CAMHA,SAAS,CAATA,SANG,CAOHgB,YAAY,CAAE,sBAAAhB,SAAS,CAAI,CACvBgB,aAAY,CAAChB,SAAD,CAAZ,CACAC,UAAU,CAAC,CAAEF,SAAS,CAATA,SAAF,CAAaC,SAAS,CAATA,SAAb,CAAD,CAAV,CACH,CAVE,CADX,EAcKa,QAdL,CADJ,CAkBH","sourcesContent":["import * as React from 'react';\nimport { StatusBar, AsyncStorage, View, Platform } from 'react-native';\n\nimport GameContext from './GameContext';\n\n// import AsyncStorage from '@react-native-community/async-storage';\n\nconst STORAGE_KEY = '@BouncyBacon:Character';\nconst SHOULD_REHYDRATE = true;\n\nconst defaultState = { character: 'bacon', highscore: 0 };\n\nasync function cacheAsync(value) {\n    await AsyncStorage.setItem(STORAGE_KEY, JSON.stringify(value));\n}\n\nasync function rehydrateAsync() {\n    if (!SHOULD_REHYDRATE || !AsyncStorage) {\n        return defaultState;\n    }\n    try {\n        const item = await AsyncStorage.getItem(STORAGE_KEY);\n        const data = JSON.parse(item);\n        return data;\n    } catch (ignored) {\n        return defaultState;\n    }\n}\n\nexport default function GameProvider({ children }) {\n\n    const [character, setCharacter] = React.useState(\n        defaultState.character\n    );\n    const [highscore, setHighscore] = React.useState(\n        defaultState.highscore\n    );\n\n    React.useEffect(() => {\n        const parseModulesAsync = async () => {\n            try {\n                const { character, highscore } = await rehydrateAsync();\n                setCharacter(character);\n                setHighscore(highscore);\n            } catch (ignored) { }\n            //   setLoaded(true);\n        };\n\n        parseModulesAsync();\n    }, []);\n\n    return (\n        <GameContext.Provider\n            value={{\n                character,\n                setCharacter: character => {\n                    setCharacter(character);\n                    cacheAsync({ character, highscore });\n                },\n                highscore,\n                setHighscore: highscore => {\n                    setHighscore(highscore);\n                    cacheAsync({ character, highscore });\n                },\n            }}\n        >\n            {children}\n        </GameContext.Provider>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}