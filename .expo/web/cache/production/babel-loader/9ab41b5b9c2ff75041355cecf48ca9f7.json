{"ast":null,"code":"import _get from\"@babel/runtime/helpers/get\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import{Renderer}from'expo-three';import{TweenMax}from'gsap';import Vibration from\"react-native-web/dist/exports/Vibration\";import{AmbientLight,DirectionalLight,Group,OrthographicCamera,Scene}from'three';import AudioManager from\"../src/AudioManager\";import{MAP_OFFSET,maxRows}from\"./GameSettings\";import Feathers from\"./Particles/Feathers\";import Water from\"./Particles/Water\";import Rows from\"./Row\";import{Fill}from\"./Row/Grass\";var useParticles=true;var useShadows=true;export var CrossyScene=function(_Scene){_inherits(CrossyScene,_Scene);function CrossyScene(_ref){var _this;var gl=_ref.gl;_classCallCheck(this,CrossyScene);_this=_possibleConstructorReturn(this,_getPrototypeOf(CrossyScene).call(this));_this.resetParticles=function(position){if(!useParticles)return;_this.featherParticles.mesh.position.copy(position);_this.waterParticles.mesh.position.copy(position);_this.featherParticles.mesh.position.y=0;_this.waterParticles.mesh.position.y=0;};_this.useParticle=function(model,type){var direction=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(!useParticles)return;requestAnimationFrame(function _callee(){return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(type==='water')){_context.next=7;break;}_this.waterParticles.mesh.position.copy(model.position);_this.waterParticles.run(type);_context.next=5;return _regeneratorRuntime.awrap(AudioManager.playAsync(AudioManager.sounds.water));case 5:_context.next=8;break;case 7:if(type==='feathers'){_this.featherParticles.mesh.position.copy(model.position);_this.featherParticles.run(type,direction);}case 8:case\"end\":return _context.stop();}}});});};_this.createParticles=function(){if(!useParticles)return;_this.waterParticles=new Water();_this.world.add(_this.waterParticles.mesh);_this.featherParticles=new Feathers();_this.world.add(_this.featherParticles.mesh);};_this.rumble=function(){Vibration.vibrate();TweenMax.to(_this.position,0.2,{x:0,y:0,z:1});TweenMax.to(_this.position,0.2,{x:0,y:0,z:0,delay:0.2});};_this.__gl=gl;_this.worldWithCamera=new Group();_this.world=new CrossyWorld();_this.worldWithCamera.add(_this.world);_this.add(_this.worldWithCamera);var light=new DirectionalLight(0xdfebff,1.75);light.position.set(20,30,0.05);light.castShadow=useShadows;light.shadow.mapSize.width=1024*2;light.shadow.mapSize.height=1024*2;var d=15;var v=6;light.shadow.camera.left=-d;light.shadow.camera.right=9;light.shadow.camera.top=v;light.shadow.camera.bottom=-v;light.shadow.camera.far=100;light.shadow.bias=0.0001;_this.add(light);_this.light=light;return _this;}_createClass(CrossyScene,[{key:\"setShadowsEnabled\",value:function setShadowsEnabled(enabled){this.light.castShadow=enabled;}}]);return CrossyScene;}(Scene);export var CrossyCamera=function(_OrthographicCamera){_inherits(CrossyCamera,_OrthographicCamera);function CrossyCamera(){var _this2;_classCallCheck(this,CrossyCamera);_this2=_possibleConstructorReturn(this,_getPrototypeOf(CrossyCamera).call(this,-1,1,1,-1,-30,30));_this2.updateScale=function(_ref2){var width=_ref2.width,height=_ref2.height,scale=_ref2.scale;_this2.left=-(width*scale);_this2.right=width*scale;_this2.top=height*scale;_this2.bottom=-(height*scale);_this2.zoom=300;_this2.updateProjectionMatrix();};_this2.position.set(-1,2.8,-2.9);_this2.lookAt(0,0,0);return _this2;}return CrossyCamera;}(OrthographicCamera);export var CrossyWorld=function(_Group){_inherits(CrossyWorld,_Group);function CrossyWorld(){var _this3;_classCallCheck(this,CrossyWorld);_this3=_possibleConstructorReturn(this,_getPrototypeOf(CrossyWorld).call(this));_this3.createParticles=function(){_this3.waterParticles=new Water();_this3.add(_this3.waterParticles.mesh);_this3.featherParticles=new Feathers();_this3.add(_this3.featherParticles.mesh);};_this3.add(new AmbientLight(0x666666,0.8));return _this3;}return CrossyWorld;}(Group);export var CrossyRenderer=function(_Renderer){_inherits(CrossyRenderer,_Renderer);function CrossyRenderer(props){var _this4;_classCallCheck(this,CrossyRenderer);_this4=_possibleConstructorReturn(this,_getPrototypeOf(CrossyRenderer).call(this,props));_this4.__gl=props.gl;_this4.setShadowsEnabled(useShadows);return _this4;}_createClass(CrossyRenderer,[{key:\"setShadowsEnabled\",value:function setShadowsEnabled(enabled){this.gammaInput=enabled;this.gammaOutput=enabled;this.shadowMap.enabled=enabled;}}]);return CrossyRenderer;}(Renderer);export var GameMap=function(){function GameMap(){var _this5=this;_classCallCheck(this,GameMap);this.floorMap={};this.treeCollision=function(position){var targetZ=\"\"+(position.z|0);if(targetZ in _this5.floorMap){var _this5$floorMap$targe=_this5.floorMap[targetZ],type=_this5$floorMap$targe.type,entity=_this5$floorMap$targe.entity;if(type==='grass'){var key=\"\"+(position.x|0);if(key in entity.obstacleMap){return true;}}}return false;};}_createClass(GameMap,[{key:\"reset\",value:function reset(){this.floorMap={};}},{key:\"getRow\",value:function getRow(index){return this.floorMap[\"\"+index];}},{key:\"setRow\",value:function setRow(index,value){this.floorMap[\"\"+index]=value;}}]);return GameMap;}();export var EntityContainer=function EntityContainer(){_classCallCheck(this,EntityContainer);this.items=[];this.count=0;};export var CrossyGameMap=function(_GameMap){_inherits(CrossyGameMap,_GameMap);function CrossyGameMap(_ref3){var _this6;var heroWidth=_ref3.heroWidth,onCollide=_ref3.onCollide,scene=_ref3.scene;_classCallCheck(this,CrossyGameMap);_this6=_possibleConstructorReturn(this,_getPrototypeOf(CrossyGameMap).call(this));_this6.grasses=new EntityContainer();_this6.water=new EntityContainer();_this6.roads=new EntityContainer();_this6.railRoads=new EntityContainer();_this6.rowCount=0;_this6.newRow=function(rowKind){if(_this6.grasses.count===maxRows){_this6.grasses.count=0;}if(_this6.roads.count===maxRows){_this6.roads.count=0;}if(_this6.water.count===maxRows){_this6.water.count=0;}if(_this6.railRoads.count===maxRows){_this6.railRoads.count=0;}if(_this6.rowCount<10){rowKind='grass';}var ROW_TYPES=['grass','roadtype','water'];if(rowKind==null){rowKind=ROW_TYPES[Math.floor(Math.random()*ROW_TYPES.length)];}switch(rowKind){case'grass':_this6.grasses.items[_this6.grasses.count].position.z=_this6.rowCount;_this6.grasses.items[_this6.grasses.count].generate(_this6.mapRowToObstacle(_this6.rowCount));_this6.setRow(_this6.rowCount,{type:'grass',entity:_this6.grasses.items[_this6.grasses.count]});_this6.grasses.count++;break;case'roadtype':if((Math.random()*4|0)===0){_this6.railRoads.items[_this6.railRoads.count].position.z=_this6.rowCount;_this6.railRoads.items[_this6.railRoads.count].active=true;_this6.setRow(_this6.rowCount,{type:'railRoad',entity:_this6.railRoads.items[_this6.railRoads.count]});_this6.railRoads.count++;}else{_this6.roads.items[_this6.roads.count].position.z=_this6.rowCount;var previousRowType=(_this6.getRow(_this6.rowCount-1)||{}).type;_this6.roads.items[_this6.roads.count].isFirstLane(previousRowType!=='road');_this6.roads.items[_this6.roads.count].active=true;_this6.setRow(_this6.rowCount,{type:'road',entity:_this6.roads.items[_this6.roads.count]});_this6.roads.count++;}break;case'water':_this6.water.items[_this6.water.count].position.z=_this6.rowCount;_this6.water.items[_this6.water.count].active=true;_this6.water.items[_this6.water.count].generate();_this6.setRow(_this6.rowCount,{type:'water',entity:_this6.water.items[_this6.water.count]});_this6.water.count++;break;}_this6.rowCount++;};_this6.init=function(){for(var i=0;i<maxRows;i++){_this6.grasses.items[i].position.z=MAP_OFFSET;_this6.water.items[i].position.z=MAP_OFFSET;_this6.water.items[i].active=false;_this6.roads.items[i].position.z=MAP_OFFSET;_this6.roads.items[i].active=false;_this6.railRoads.items[i].position.z=MAP_OFFSET;_this6.railRoads.items[i].active=false;}_this6.grasses.items[_this6.grasses.count].position.z=_this6.rowCount;_this6.grasses.items[_this6.grasses.count].generate(_this6.mapRowToObstacle(_this6.rowCount));_this6.grasses.count++;_this6.rowCount++;for(var _i=0;_i<maxRows+3;_i++){_this6.newRow();}};_this6.mapRowToObstacle=function(row){if(_this6.rowCount<5){return Fill.solid;}else if(_this6.rowCount<10){return Fill.empty;}return Fill.random;};_this6.heroWidth=heroWidth;for(var i=0;i<maxRows;i++){_this6.grasses.items[i]=new Rows.Grass(_this6.heroWidth);_this6.water.items[i]=new Rows.Water(_this6.heroWidth,onCollide);_this6.roads.items[i]=new Rows.Road(_this6.heroWidth,onCollide);_this6.railRoads.items[i]=new Rows.RailRoad(_this6.heroWidth,onCollide);scene.world.add(_this6.grasses.items[i]);scene.world.add(_this6.water.items[i]);scene.world.add(_this6.roads.items[i]);scene.world.add(_this6.railRoads.items[i]);}return _this6;}_createClass(CrossyGameMap,[{key:\"tick\",value:function tick(dt,hero){for(var _iterator=this.railRoads.items,_isArray=Array.isArray(_iterator),_i2=0,_iterator=_isArray?_iterator:_iterator[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref4;if(_isArray){if(_i2>=_iterator.length)break;_ref4=_iterator[_i2++];}else{_i2=_iterator.next();if(_i2.done)break;_ref4=_i2.value;}var _railRoad=_ref4;_railRoad.update(dt,hero);}for(var _iterator2=this.roads.items,_isArray2=Array.isArray(_iterator2),_i3=0,_iterator2=_isArray2?_iterator2:_iterator2[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref5;if(_isArray2){if(_i3>=_iterator2.length)break;_ref5=_iterator2[_i3++];}else{_i3=_iterator2.next();if(_i3.done)break;_ref5=_i3.value;}var _road=_ref5;_road.update(dt,hero);}for(var _iterator3=this.water.items,_isArray3=Array.isArray(_iterator3),_i4=0,_iterator3=_isArray3?_iterator3:_iterator3[typeof Symbol===\"function\"?Symbol.iterator:\"@@iterator\"]();;){var _ref6;if(_isArray3){if(_i4>=_iterator3.length)break;_ref6=_iterator3[_i4++];}else{_i4=_iterator3.next();if(_i4.done)break;_ref6=_i4.value;}var _water=_ref6;_water.update(dt,hero);}}},{key:\"reset\",value:function reset(){this.grasses.count=0;this.water.count=0;this.roads.count=0;this.railRoads.count=0;this.rowCount=0;_get(_getPrototypeOf(CrossyGameMap.prototype),\"reset\",this).call(this);}}]);return CrossyGameMap;}(GameMap);","map":{"version":3,"sources":["/Users/gabew/Codelation-Projects/gabe-wilber.github.io/src/CrossyGame.js"],"names":["Renderer","TweenMax","AmbientLight","DirectionalLight","Group","OrthographicCamera","Scene","AudioManager","MAP_OFFSET","maxRows","Feathers","Water","Rows","Fill","useParticles","useShadows","CrossyScene","gl","resetParticles","position","featherParticles","mesh","copy","waterParticles","y","useParticle","model","type","direction","requestAnimationFrame","run","playAsync","sounds","water","createParticles","world","add","rumble","Vibration","vibrate","to","x","z","delay","__gl","worldWithCamera","CrossyWorld","light","set","castShadow","shadow","mapSize","width","height","d","v","camera","left","right","top","bottom","far","bias","enabled","CrossyCamera","updateScale","scale","zoom","updateProjectionMatrix","lookAt","CrossyRenderer","props","setShadowsEnabled","gammaInput","gammaOutput","shadowMap","GameMap","floorMap","treeCollision","targetZ","entity","key","obstacleMap","index","value","EntityContainer","items","count","CrossyGameMap","heroWidth","onCollide","scene","grasses","roads","railRoads","rowCount","newRow","rowKind","ROW_TYPES","Math","floor","random","length","generate","mapRowToObstacle","setRow","active","previousRowType","getRow","isFirstLane","init","i","row","solid","empty","Grass","Road","RailRoad","dt","hero","railRoad","update","road"],"mappings":"4bAAA,OAASA,QAAT,KAAyB,YAAzB,CACA,OAASC,QAAT,KAAyB,MAAzB,C,+DAEA,OAASC,YAAT,CAAuBC,gBAAvB,CAAyCC,KAAzC,CAAgDC,kBAAhD,CAAoEC,KAApE,KAAiF,OAAjF,CAEA,MAAOC,CAAAA,YAAP,2BACA,OAASC,UAAT,CAAqBC,OAArB,sBACA,MAAOC,CAAAA,QAAP,4BACA,MAAOC,CAAAA,KAAP,yBACA,MAAOC,CAAAA,IAAP,aACA,OAASC,IAAT,mBAGA,GAAMC,CAAAA,YAAY,CAAG,IAArB,CACA,GAAMC,CAAAA,UAAU,CAAG,IAAnB,CAEA,UAAaC,CAAAA,WAAb,gDACE,0BAAoB,cAANC,CAAAA,EAAM,MAANA,EAAM,mCAClB,+EADkB,MAoCpBC,cApCoB,CAoCH,SAAAC,QAAQ,CAAI,CAC3B,GAAI,CAACL,YAAL,CAAmB,OACnB,MAAKM,gBAAL,CAAsBC,IAAtB,CAA2BF,QAA3B,CAAoCG,IAApC,CAAyCH,QAAzC,EACA,MAAKI,cAAL,CAAoBF,IAApB,CAAyBF,QAAzB,CAAkCG,IAAlC,CAAuCH,QAAvC,EACA,MAAKC,gBAAL,CAAsBC,IAAtB,CAA2BF,QAA3B,CAAoCK,CAApC,CAAwC,CAAxC,CACA,MAAKD,cAAL,CAAoBF,IAApB,CAAyBF,QAAzB,CAAkCK,CAAlC,CAAsC,CAAtC,CACD,CA1CmB,OA4CpBC,WA5CoB,CA4CN,SAACC,KAAD,CAAQC,IAAR,CAAgC,IAAlBC,CAAAA,SAAkB,2DAAN,CAAM,CAC5C,GAAI,CAACd,YAAL,CAAmB,OACnBe,qBAAqB,CAAC,yIAChBF,IAAI,GAAK,OADO,0BAElB,MAAKJ,cAAL,CAAoBF,IAApB,CAAyBF,QAAzB,CAAkCG,IAAlC,CAAuCI,KAAK,CAACP,QAA7C,EACA,MAAKI,cAAL,CAAoBO,GAApB,CAAwBH,IAAxB,EAHkB,iDAIZpB,YAAY,CAACwB,SAAb,CAAuBxB,YAAY,CAACyB,MAAb,CAAoBC,KAA3C,CAJY,sCAKb,GAAIN,IAAI,GAAK,UAAb,CAAyB,CAC9B,MAAKP,gBAAL,CAAsBC,IAAtB,CAA2BF,QAA3B,CAAoCG,IAApC,CAAyCI,KAAK,CAACP,QAA/C,EACA,MAAKC,gBAAL,CAAsBU,GAAtB,CAA0BH,IAA1B,CAAgCC,SAAhC,EACD,CARmB,8CAAD,CAArB,CAUD,CAxDmB,OA0DpBM,eA1DoB,CA0DF,UAAM,CACtB,GAAI,CAACpB,YAAL,CAAmB,OAEnB,MAAKS,cAAL,CAAsB,GAAIZ,CAAAA,KAAJ,EAAtB,CACA,MAAKwB,KAAL,CAAWC,GAAX,CAAe,MAAKb,cAAL,CAAoBF,IAAnC,EAEA,MAAKD,gBAAL,CAAwB,GAAIV,CAAAA,QAAJ,EAAxB,CACA,MAAKyB,KAAL,CAAWC,GAAX,CAAe,MAAKhB,gBAAL,CAAsBC,IAArC,EACD,CAlEmB,OAoEpBgB,MApEoB,CAoEX,UAAM,CACbC,SAAS,CAACC,OAAV,GAEAtC,QAAQ,CAACuC,EAAT,CAAY,MAAKrB,QAAjB,CAA2B,GAA3B,CAAgC,CAC9BsB,CAAC,CAAE,CAD2B,CAE9BjB,CAAC,CAAE,CAF2B,CAG9BkB,CAAC,CAAE,CAH2B,CAAhC,EAKAzC,QAAQ,CAACuC,EAAT,CAAY,MAAKrB,QAAjB,CAA2B,GAA3B,CAAgC,CAC9BsB,CAAC,CAAE,CAD2B,CAE9BjB,CAAC,CAAE,CAF2B,CAG9BkB,CAAC,CAAE,CAH2B,CAI9BC,KAAK,CAAE,GAJuB,CAAhC,EAMD,CAlFmB,CAElB,MAAKC,IAAL,CAAY3B,EAAZ,CAEA,MAAK4B,eAAL,CAAuB,GAAIzC,CAAAA,KAAJ,EAAvB,CACA,MAAK+B,KAAL,CAAa,GAAIW,CAAAA,WAAJ,EAAb,CACA,MAAKD,eAAL,CAAqBT,GAArB,CAAyB,MAAKD,KAA9B,EACA,MAAKC,GAAL,CAAS,MAAKS,eAAd,EAEA,GAAME,CAAAA,KAAK,CAAG,GAAI5C,CAAAA,gBAAJ,CAAqB,QAArB,CAA+B,IAA/B,CAAd,CACA4C,KAAK,CAAC5B,QAAN,CAAe6B,GAAf,CAAmB,EAAnB,CAAuB,EAAvB,CAA2B,IAA3B,EACAD,KAAK,CAACE,UAAN,CAAmBlC,UAAnB,CACAgC,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqBC,KAArB,CAA6B,KAAO,CAApC,CACAL,KAAK,CAACG,MAAN,CAAaC,OAAb,CAAqBE,MAArB,CAA8B,KAAO,CAArC,CAEA,GAAMC,CAAAA,CAAC,CAAG,EAAV,CACA,GAAMC,CAAAA,CAAC,CAAG,CAAV,CACAR,KAAK,CAACG,MAAN,CAAaM,MAAb,CAAoBC,IAApB,CAA2B,CAACH,CAA5B,CACAP,KAAK,CAACG,MAAN,CAAaM,MAAb,CAAoBE,KAApB,CAA4B,CAA5B,CACAX,KAAK,CAACG,MAAN,CAAaM,MAAb,CAAoBG,GAApB,CAA0BJ,CAA1B,CACAR,KAAK,CAACG,MAAN,CAAaM,MAAb,CAAoBI,MAApB,CAA6B,CAACL,CAA9B,CACAR,KAAK,CAACG,MAAN,CAAaM,MAAb,CAAoBK,GAApB,CAA0B,GAA1B,CACAd,KAAK,CAACG,MAAN,CAAaY,IAAb,CAAoB,MAApB,CAEA,MAAK1B,GAAL,CAASW,KAAT,EAEA,MAAKA,KAAL,CAAaA,KAAb,CA1BkB,aA8BnB,CA/BH,oFAiCoBgB,OAjCpB,CAiC6B,CACzB,KAAKhB,KAAL,CAAWE,UAAX,CAAwBc,OAAxB,CACD,CAnCH,yBAAiCzD,KAAjC,EAsFA,UAAa0D,CAAAA,YAAb,2EACE,uBAAc,+CACZ,+EAAM,CAAC,CAAP,CAAU,CAAV,CAAa,CAAb,CAAgB,CAAC,CAAjB,CAAoB,CAAC,EAArB,CAAyB,EAAzB,GADY,OAMdC,WANc,CAMA,eAA8B,IAA3Bb,CAAAA,KAA2B,OAA3BA,KAA2B,CAApBC,MAAoB,OAApBA,MAAoB,CAAZa,KAAY,OAAZA,KAAY,CAC1C,OAAKT,IAAL,CAAY,EAAEL,KAAK,CAAGc,KAAV,CAAZ,CACA,OAAKR,KAAL,CAAaN,KAAK,CAAGc,KAArB,CACA,OAAKP,GAAL,CAAWN,MAAM,CAAGa,KAApB,CACA,OAAKN,MAAL,CAAc,EAAEP,MAAM,CAAGa,KAAX,CAAd,CACA,OAAKC,IAAL,CAAY,GAAZ,CACA,OAAKC,sBAAL,GACD,CAba,CAEZ,OAAKjD,QAAL,CAAc6B,GAAd,CAAkB,CAAC,CAAnB,CAAsB,GAAtB,CAA2B,CAAC,GAA5B,EACA,OAAKqB,MAAL,CAAY,CAAZ,CAAe,CAAf,CAAkB,CAAlB,EAHY,cAIb,CALH,sBAAkChE,kBAAlC,EAiBA,UAAayC,CAAAA,WAAb,gDACE,sBAAc,8CACZ,gFADY,OAKdZ,eALc,CAKI,UAAM,CACtB,OAAKX,cAAL,CAAsB,GAAIZ,CAAAA,KAAJ,EAAtB,CACA,OAAKyB,GAAL,CAAS,OAAKb,cAAL,CAAoBF,IAA7B,EAEA,OAAKD,gBAAL,CAAwB,GAAIV,CAAAA,QAAJ,EAAxB,CACA,OAAK0B,GAAL,CAAS,OAAKhB,gBAAL,CAAsBC,IAA/B,EACD,CAXa,CAEZ,OAAKe,GAAL,CAAS,GAAIlC,CAAAA,YAAJ,CAAiB,QAAjB,CAA2B,GAA3B,CAAT,EAFY,cAGb,CAJH,qBAAiCE,KAAjC,EAeA,UAAakE,CAAAA,cAAb,yDACE,wBAAYC,KAAZ,CAAmB,iDACjB,iFAAMA,KAAN,GACA,OAAK3B,IAAL,CAAY2B,KAAK,CAACtD,EAAlB,CACA,OAAKuD,iBAAL,CAAuBzD,UAAvB,EAHiB,cAIlB,CALH,uFAOoBgD,OAPpB,CAO6B,CACzB,KAAKU,UAAL,CAAkBV,OAAlB,CACA,KAAKW,WAAL,CAAmBX,OAAnB,CACA,KAAKY,SAAL,CAAeZ,OAAf,CAAyBA,OAAzB,CACD,CAXH,4BAAoC/D,QAApC,EAcA,UAAa4E,CAAAA,OAAb,kFACEC,QADF,CACa,EADb,MAeEC,aAfF,CAekB,SAAA3D,QAAQ,CAAI,CAC1B,GAAM4D,CAAAA,OAAO,KAAM5D,QAAQ,CAACuB,CAAT,CAAa,CAAnB,CAAb,CACA,GAAIqC,OAAO,GAAI,CAAA,MAAI,CAACF,QAApB,CAA8B,2BACH,MAAI,CAACA,QAAL,CAAcE,OAAd,CADG,CACpBpD,IADoB,uBACpBA,IADoB,CACdqD,MADc,uBACdA,MADc,CAE5B,GAAIrD,IAAI,GAAK,OAAb,CAAsB,CACpB,GAAMsD,CAAAA,GAAG,KAAM9D,QAAQ,CAACsB,CAAT,CAAa,CAAnB,CAAT,CACA,GAAIwC,GAAG,GAAID,CAAAA,MAAM,CAACE,WAAlB,CAA+B,CAC7B,MAAO,KAAP,CACD,CACF,CACF,CAED,MAAO,MAAP,CACD,CA5BH,2DAGU,CACN,KAAKL,QAAL,CAAgB,EAAhB,CACD,CALH,sCAOSM,KAPT,CAOgB,CACZ,MAAO,MAAKN,QAAL,IAAiBM,KAAjB,CAAP,CACD,CATH,sCAUSA,KAVT,CAUgBC,KAVhB,CAUuB,CACnB,KAAKP,QAAL,IAAiBM,KAAjB,EAA4BC,KAA5B,CACD,CAZH,uBA+BA,UAAaC,CAAAA,eAAb,uEACEC,KADF,CACU,EADV,MAEEC,KAFF,CAEU,CAFV,GAKA,UAAaC,CAAAA,aAAb,sDAOE,6BAA6C,eAA/BC,CAAAA,SAA+B,OAA/BA,SAA+B,CAApBC,SAAoB,OAApBA,SAAoB,CAATC,KAAS,OAATA,KAAS,qCAC3C,kFAD2C,OAN7CC,OAM6C,CANnC,GAAIP,CAAAA,eAAJ,EAMmC,QAL7CpD,KAK6C,CALrC,GAAIoD,CAAAA,eAAJ,EAKqC,QAJ7CQ,KAI6C,CAJrC,GAAIR,CAAAA,eAAJ,EAIqC,QAH7CS,SAG6C,CAHjC,GAAIT,CAAAA,eAAJ,EAGiC,QAF7CU,QAE6C,CAFlC,CAEkC,QAgC7CC,MAhC6C,CAgCpC,SAAAC,OAAO,CAAI,CAClB,GAAI,OAAKL,OAAL,CAAaL,KAAb,GAAuB9E,OAA3B,CAAoC,CAClC,OAAKmF,OAAL,CAAaL,KAAb,CAAqB,CAArB,CACD,CACD,GAAI,OAAKM,KAAL,CAAWN,KAAX,GAAqB9E,OAAzB,CAAkC,CAChC,OAAKoF,KAAL,CAAWN,KAAX,CAAmB,CAAnB,CACD,CACD,GAAI,OAAKtD,KAAL,CAAWsD,KAAX,GAAqB9E,OAAzB,CAAkC,CAChC,OAAKwB,KAAL,CAAWsD,KAAX,CAAmB,CAAnB,CACD,CACD,GAAI,OAAKO,SAAL,CAAeP,KAAf,GAAyB9E,OAA7B,CAAsC,CACpC,OAAKqF,SAAL,CAAeP,KAAf,CAAuB,CAAvB,CACD,CACD,GAAI,OAAKQ,QAAL,CAAgB,EAApB,CAAwB,CACtBE,OAAO,CAAG,OAAV,CACD,CAED,GAAMC,CAAAA,SAAS,CAAG,CAAC,OAAD,CAAU,UAAV,CAAsB,OAAtB,CAAlB,CACA,GAAID,OAAO,EAAI,IAAf,CAAqB,CACnBA,OAAO,CAAGC,SAAS,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgBH,SAAS,CAACI,MAArC,CAAD,CAAnB,CACD,CAED,OAAQL,OAAR,EACE,IAAK,OAAL,CACE,OAAKL,OAAL,CAAaN,KAAb,CAAmB,OAAKM,OAAL,CAAaL,KAAhC,EAAuCpE,QAAvC,CAAgDuB,CAAhD,CAAoD,OAAKqD,QAAzD,CACA,OAAKH,OAAL,CAAaN,KAAb,CAAmB,OAAKM,OAAL,CAAaL,KAAhC,EAAuCgB,QAAvC,CACE,OAAKC,gBAAL,CAAsB,OAAKT,QAA3B,CADF,EAGA,OAAKU,MAAL,CAAY,OAAKV,QAAjB,CAA2B,CACzBpE,IAAI,CAAE,OADmB,CAEzBqD,MAAM,CAAE,OAAKY,OAAL,CAAaN,KAAb,CAAmB,OAAKM,OAAL,CAAaL,KAAhC,CAFiB,CAA3B,EAIA,OAAKK,OAAL,CAAaL,KAAb,GACA,MACF,IAAK,UAAL,CACE,GAAI,CAAEY,IAAI,CAACE,MAAL,GAAgB,CAAjB,CAAsB,CAAvB,IAA8B,CAAlC,CAAqC,CACnC,OAAKP,SAAL,CAAeR,KAAf,CAAqB,OAAKQ,SAAL,CAAeP,KAApC,EAA2CpE,QAA3C,CAAoDuB,CAApD,CAAwD,OAAKqD,QAA7D,CACA,OAAKD,SAAL,CAAeR,KAAf,CAAqB,OAAKQ,SAAL,CAAeP,KAApC,EAA2CmB,MAA3C,CAAoD,IAApD,CACA,OAAKD,MAAL,CAAY,OAAKV,QAAjB,CAA2B,CACzBpE,IAAI,CAAE,UADmB,CAEzBqD,MAAM,CAAE,OAAKc,SAAL,CAAeR,KAAf,CAAqB,OAAKQ,SAAL,CAAeP,KAApC,CAFiB,CAA3B,EAIA,OAAKO,SAAL,CAAeP,KAAf,GACD,CARD,IAQO,CACL,OAAKM,KAAL,CAAWP,KAAX,CAAiB,OAAKO,KAAL,CAAWN,KAA5B,EAAmCpE,QAAnC,CAA4CuB,CAA5C,CAAgD,OAAKqD,QAArD,CAEA,GAAMY,CAAAA,eAAe,CAAG,CAAC,OAAKC,MAAL,CAAY,OAAKb,QAAL,CAAgB,CAA5B,GAAkC,EAAnC,EAAuCpE,IAA/D,CACA,OAAKkE,KAAL,CAAWP,KAAX,CAAiB,OAAKO,KAAL,CAAWN,KAA5B,EAAmCsB,WAAnC,CAA+CF,eAAe,GAAK,MAAnE,EACA,OAAKd,KAAL,CAAWP,KAAX,CAAiB,OAAKO,KAAL,CAAWN,KAA5B,EAAmCmB,MAAnC,CAA4C,IAA5C,CACA,OAAKD,MAAL,CAAY,OAAKV,QAAjB,CAA2B,CACzBpE,IAAI,CAAE,MADmB,CAEzBqD,MAAM,CAAE,OAAKa,KAAL,CAAWP,KAAX,CAAiB,OAAKO,KAAL,CAAWN,KAA5B,CAFiB,CAA3B,EAIA,OAAKM,KAAL,CAAWN,KAAX,GACD,CACD,MACF,IAAK,OAAL,CACE,OAAKtD,KAAL,CAAWqD,KAAX,CAAiB,OAAKrD,KAAL,CAAWsD,KAA5B,EAAmCpE,QAAnC,CAA4CuB,CAA5C,CAAgD,OAAKqD,QAArD,CACA,OAAK9D,KAAL,CAAWqD,KAAX,CAAiB,OAAKrD,KAAL,CAAWsD,KAA5B,EAAmCmB,MAAnC,CAA4C,IAA5C,CACA,OAAKzE,KAAL,CAAWqD,KAAX,CAAiB,OAAKrD,KAAL,CAAWsD,KAA5B,EAAmCgB,QAAnC,GACA,OAAKE,MAAL,CAAY,OAAKV,QAAjB,CAA2B,CACzBpE,IAAI,CAAE,OADmB,CAEzBqD,MAAM,CAAE,OAAK/C,KAAL,CAAWqD,KAAX,CAAiB,OAAKrD,KAAL,CAAWsD,KAA5B,CAFiB,CAA3B,EAIA,OAAKtD,KAAL,CAAWsD,KAAX,GACA,MA3CJ,CA8CA,OAAKQ,QAAL,GACD,CArG4C,QAkH7Ce,IAlH6C,CAkHtC,UAAM,CACX,IAAK,GAAIC,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGtG,OAApB,CAA6BsG,CAAC,EAA9B,CAAkC,CAChC,OAAKnB,OAAL,CAAaN,KAAb,CAAmByB,CAAnB,EAAsB5F,QAAtB,CAA+BuB,CAA/B,CAAmClC,UAAnC,CAEA,OAAKyB,KAAL,CAAWqD,KAAX,CAAiByB,CAAjB,EAAoB5F,QAApB,CAA6BuB,CAA7B,CAAiClC,UAAjC,CACA,OAAKyB,KAAL,CAAWqD,KAAX,CAAiByB,CAAjB,EAAoBL,MAApB,CAA6B,KAA7B,CACA,OAAKb,KAAL,CAAWP,KAAX,CAAiByB,CAAjB,EAAoB5F,QAApB,CAA6BuB,CAA7B,CAAiClC,UAAjC,CACA,OAAKqF,KAAL,CAAWP,KAAX,CAAiByB,CAAjB,EAAoBL,MAApB,CAA6B,KAA7B,CACA,OAAKZ,SAAL,CAAeR,KAAf,CAAqByB,CAArB,EAAwB5F,QAAxB,CAAiCuB,CAAjC,CAAqClC,UAArC,CACA,OAAKsF,SAAL,CAAeR,KAAf,CAAqByB,CAArB,EAAwBL,MAAxB,CAAiC,KAAjC,CACD,CAED,OAAKd,OAAL,CAAaN,KAAb,CAAmB,OAAKM,OAAL,CAAaL,KAAhC,EAAuCpE,QAAvC,CAAgDuB,CAAhD,CAAoD,OAAKqD,QAAzD,CACA,OAAKH,OAAL,CAAaN,KAAb,CAAmB,OAAKM,OAAL,CAAaL,KAAhC,EAAuCgB,QAAvC,CACE,OAAKC,gBAAL,CAAsB,OAAKT,QAA3B,CADF,EAGA,OAAKH,OAAL,CAAaL,KAAb,GACA,OAAKQ,QAAL,GAEA,IAAK,GAAIgB,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAGtG,OAAO,CAAG,CAA9B,CAAiCsG,EAAC,EAAlC,CAAsC,CACpC,OAAKf,MAAL,GACD,CACF,CAxI4C,QA0I7CQ,gBA1I6C,CA0I1B,SAAAQ,GAAG,CAAI,CACxB,GAAI,OAAKjB,QAAL,CAAgB,CAApB,CAAuB,CACrB,MAAOlF,CAAAA,IAAI,CAACoG,KAAZ,CACD,CAFD,IAEO,IAAI,OAAKlB,QAAL,CAAgB,EAApB,CAAwB,CAC7B,MAAOlF,CAAAA,IAAI,CAACqG,KAAZ,CACD,CACD,MAAOrG,CAAAA,IAAI,CAACwF,MAAZ,CACD,CAjJ4C,CAG3C,OAAKZ,SAAL,CAAiBA,SAAjB,CAIA,IAAK,GAAIsB,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGtG,OAApB,CAA6BsG,CAAC,EAA9B,CAAkC,CAChC,OAAKnB,OAAL,CAAaN,KAAb,CAAmByB,CAAnB,EAAwB,GAAInG,CAAAA,IAAI,CAACuG,KAAT,CAAe,OAAK1B,SAApB,CAAxB,CACA,OAAKxD,KAAL,CAAWqD,KAAX,CAAiByB,CAAjB,EAAsB,GAAInG,CAAAA,IAAI,CAACD,KAAT,CAAe,OAAK8E,SAApB,CAA+BC,SAA/B,CAAtB,CACA,OAAKG,KAAL,CAAWP,KAAX,CAAiByB,CAAjB,EAAsB,GAAInG,CAAAA,IAAI,CAACwG,IAAT,CAAc,OAAK3B,SAAnB,CAA8BC,SAA9B,CAAtB,CACA,OAAKI,SAAL,CAAeR,KAAf,CAAqByB,CAArB,EAA0B,GAAInG,CAAAA,IAAI,CAACyG,QAAT,CAAkB,OAAK5B,SAAvB,CAAkCC,SAAlC,CAA1B,CACAC,KAAK,CAACxD,KAAN,CAAYC,GAAZ,CAAgB,OAAKwD,OAAL,CAAaN,KAAb,CAAmByB,CAAnB,CAAhB,EACApB,KAAK,CAACxD,KAAN,CAAYC,GAAZ,CAAgB,OAAKH,KAAL,CAAWqD,KAAX,CAAiByB,CAAjB,CAAhB,EACApB,KAAK,CAACxD,KAAN,CAAYC,GAAZ,CAAgB,OAAKyD,KAAL,CAAWP,KAAX,CAAiByB,CAAjB,CAAhB,EACApB,KAAK,CAACxD,KAAN,CAAYC,GAAZ,CAAgB,OAAK0D,SAAL,CAAeR,KAAf,CAAqByB,CAArB,CAAhB,EACD,CAhB0C,cAiB5C,CAxBH,4DA0BOO,EA1BP,CA0BWC,IA1BX,CA0BiB,CACb,kBAAuB,KAAKzB,SAAL,CAAeR,KAAtC,6IAA6C,+IAAlCkC,CAAAA,SAAkC,OAC3CA,SAAQ,CAACC,MAAT,CAAgBH,EAAhB,CAAoBC,IAApB,EACD,CACD,mBAAmB,KAAK1B,KAAL,CAAWP,KAA9B,mJAAqC,mJAA1BoC,CAAAA,KAA0B,OACnCA,KAAI,CAACD,MAAL,CAAYH,EAAZ,CAAgBC,IAAhB,EACD,CACD,mBAAoB,KAAKtF,KAAL,CAAWqD,KAA/B,mJAAsC,mJAA3BrD,CAAAA,MAA2B,OACpCA,MAAK,CAACwF,MAAN,CAAaH,EAAb,CAAiBC,IAAjB,EACD,CACF,CApCH,qCA8GU,CACN,KAAK3B,OAAL,CAAaL,KAAb,CAAqB,CAArB,CACA,KAAKtD,KAAL,CAAWsD,KAAX,CAAmB,CAAnB,CACA,KAAKM,KAAL,CAAWN,KAAX,CAAmB,CAAnB,CACA,KAAKO,SAAL,CAAeP,KAAf,CAAuB,CAAvB,CAEA,KAAKQ,QAAL,CAAgB,CAAhB,CACA,uEACD,CAtHH,2BAAmCnB,OAAnC","sourcesContent":["import { Renderer } from 'expo-three';\nimport { TweenMax } from 'gsap';\nimport { Vibration } from 'react-native';\nimport { AmbientLight, DirectionalLight, Group, OrthographicCamera, Scene } from 'three';\n\nimport AudioManager from '../src/AudioManager';\nimport { MAP_OFFSET, maxRows } from './GameSettings';\nimport Feathers from './Particles/Feathers';\nimport Water from './Particles/Water';\nimport Rows from './Row';\nimport { Fill } from './Row/Grass';\n\n// TODO Add to state - disable/enable when battery is low\nconst useParticles = true;\nconst useShadows = true;\n\nexport class CrossyScene extends Scene {\n  constructor({ gl }) {\n    super();\n    this.__gl = gl\n\n    this.worldWithCamera = new Group();\n    this.world = new CrossyWorld();\n    this.worldWithCamera.add(this.world);\n    this.add(this.worldWithCamera);\n\n    const light = new DirectionalLight(0xdfebff, 1.75);\n    light.position.set(20, 30, 0.05);\n    light.castShadow = useShadows;\n    light.shadow.mapSize.width = 1024 * 2;\n    light.shadow.mapSize.height = 1024 * 2;\n\n    const d = 15;\n    const v = 6;\n    light.shadow.camera.left = -d;\n    light.shadow.camera.right = 9;\n    light.shadow.camera.top = v;\n    light.shadow.camera.bottom = -v;\n    light.shadow.camera.far = 100;\n    light.shadow.bias = 0.0001;\n\n    this.add(light);\n\n    this.light = light;\n\n    // let helper = new CameraHelper(light.shadow.camera);\n    // this.add(helper);\n  }\n\n  setShadowsEnabled(enabled) {\n    this.light.castShadow = enabled;\n  }\n\n  resetParticles = position => {\n    if (!useParticles) return;\n    this.featherParticles.mesh.position.copy(position);\n    this.waterParticles.mesh.position.copy(position);\n    this.featherParticles.mesh.position.y = 0;\n    this.waterParticles.mesh.position.y = 0;\n  };\n\n  useParticle = (model, type, direction = 0) => {\n    if (!useParticles) return;\n    requestAnimationFrame(async () => {\n      if (type === 'water') {\n        this.waterParticles.mesh.position.copy(model.position);\n        this.waterParticles.run(type);\n        await AudioManager.playAsync(AudioManager.sounds.water);\n      } else if (type === 'feathers') {\n        this.featherParticles.mesh.position.copy(model.position);\n        this.featherParticles.run(type, direction);\n      }\n    });\n  };\n\n  createParticles = () => {\n    if (!useParticles) return;\n\n    this.waterParticles = new Water();\n    this.world.add(this.waterParticles.mesh);\n\n    this.featherParticles = new Feathers();\n    this.world.add(this.featherParticles.mesh);\n  };\n\n  rumble = () => {\n    Vibration.vibrate();\n\n    TweenMax.to(this.position, 0.2, {\n      x: 0,\n      y: 0,\n      z: 1,\n    });\n    TweenMax.to(this.position, 0.2, {\n      x: 0,\n      y: 0,\n      z: 0,\n      delay: 0.2,\n    });\n  };\n}\n\nexport class CrossyCamera extends OrthographicCamera {\n  constructor() {\n    super(-1, 1, 1, -1, -30, 30);\n    this.position.set(-1, 2.8, -2.9); // Change -1 to -.02\n    this.lookAt(0, 0, 0);\n  }\n\n  updateScale = ({ width, height, scale }) => {\n    this.left = -(width * scale);\n    this.right = width * scale;\n    this.top = height * scale;\n    this.bottom = -(height * scale);\n    this.zoom = 300;\n    this.updateProjectionMatrix();\n  };\n}\n\nexport class CrossyWorld extends Group {\n  constructor() {\n    super();\n    this.add(new AmbientLight(0x666666, 0.8));\n  }\n\n  createParticles = () => {\n    this.waterParticles = new Water();\n    this.add(this.waterParticles.mesh);\n\n    this.featherParticles = new Feathers();\n    this.add(this.featherParticles.mesh);\n  };\n}\n\nexport class CrossyRenderer extends Renderer {\n  constructor(props) {\n    super(props);\n    this.__gl = props.gl;\n    this.setShadowsEnabled(useShadows);\n  }\n\n  setShadowsEnabled(enabled) {\n    this.gammaInput = enabled;\n    this.gammaOutput = enabled;\n    this.shadowMap.enabled = enabled;\n  }\n}\n\nexport class GameMap {\n  floorMap = {};\n\n  reset() {\n    this.floorMap = {};\n  }\n\n  getRow(index) {\n    return this.floorMap[`${index}`];\n  }\n  setRow(index, value) {\n    this.floorMap[`${index}`] = value;\n  }\n\n  // Detect collisions with trees/cars\n  treeCollision = position => {\n    const targetZ = `${position.z | 0}`;\n    if (targetZ in this.floorMap) {\n      const { type, entity } = this.floorMap[targetZ];\n      if (type === 'grass') {\n        const key = `${position.x | 0}`;\n        if (key in entity.obstacleMap) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n}\n\nexport class EntityContainer {\n  items = [];\n  count = 0;\n}\n\nexport class CrossyGameMap extends GameMap {\n  grasses = new EntityContainer();\n  water = new EntityContainer();\n  roads = new EntityContainer();\n  railRoads = new EntityContainer();\n  rowCount = 0;\n\n  constructor({ heroWidth, onCollide, scene }) {\n    super();\n\n    this.heroWidth = heroWidth;\n\n    // Assign mesh to corresponding array\n    // and add mesh to scene\n    for (let i = 0; i < maxRows; i++) {\n      this.grasses.items[i] = new Rows.Grass(this.heroWidth);\n      this.water.items[i] = new Rows.Water(this.heroWidth, onCollide);\n      this.roads.items[i] = new Rows.Road(this.heroWidth, onCollide);\n      this.railRoads.items[i] = new Rows.RailRoad(this.heroWidth, onCollide);\n      scene.world.add(this.grasses.items[i]);\n      scene.world.add(this.water.items[i]);\n      scene.world.add(this.roads.items[i]);\n      scene.world.add(this.railRoads.items[i]);\n    }\n  }\n\n  tick(dt, hero) {\n    for (const railRoad of this.railRoads.items) {\n      railRoad.update(dt, hero);\n    }\n    for (const road of this.roads.items) {\n      road.update(dt, hero);\n    }\n    for (const water of this.water.items) {\n      water.update(dt, hero);\n    }\n  }\n\n  // Scene generators\n  newRow = rowKind => {\n    if (this.grasses.count === maxRows) {\n      this.grasses.count = 0;\n    }\n    if (this.roads.count === maxRows) {\n      this.roads.count = 0;\n    }\n    if (this.water.count === maxRows) {\n      this.water.count = 0;\n    }\n    if (this.railRoads.count === maxRows) {\n      this.railRoads.count = 0;\n    }\n    if (this.rowCount < 10) {\n      rowKind = 'grass';\n    }\n\n    const ROW_TYPES = ['grass', 'roadtype', 'water'];\n    if (rowKind == null) {\n      rowKind = ROW_TYPES[Math.floor(Math.random() * ROW_TYPES.length)];\n    }\n\n    switch (rowKind) {\n      case 'grass':\n        this.grasses.items[this.grasses.count].position.z = this.rowCount;\n        this.grasses.items[this.grasses.count].generate(\n          this.mapRowToObstacle(this.rowCount),\n        );\n        this.setRow(this.rowCount, {\n          type: 'grass',\n          entity: this.grasses.items[this.grasses.count],\n        });\n        this.grasses.count++;\n        break;\n      case 'roadtype':\n        if (((Math.random() * 4) | 0) === 0) {\n          this.railRoads.items[this.railRoads.count].position.z = this.rowCount;\n          this.railRoads.items[this.railRoads.count].active = true;\n          this.setRow(this.rowCount, {\n            type: 'railRoad',\n            entity: this.railRoads.items[this.railRoads.count],\n          });\n          this.railRoads.count++;\n        } else {\n          this.roads.items[this.roads.count].position.z = this.rowCount;\n\n          const previousRowType = (this.getRow(this.rowCount - 1) || {}).type;\n          this.roads.items[this.roads.count].isFirstLane(previousRowType !== 'road')\n          this.roads.items[this.roads.count].active = true;\n          this.setRow(this.rowCount, {\n            type: 'road',\n            entity: this.roads.items[this.roads.count],\n          });\n          this.roads.count++;\n        }\n        break;\n      case 'water':\n        this.water.items[this.water.count].position.z = this.rowCount;\n        this.water.items[this.water.count].active = true;\n        this.water.items[this.water.count].generate();\n        this.setRow(this.rowCount, {\n          type: 'water',\n          entity: this.water.items[this.water.count],\n        });\n        this.water.count++;\n        break;\n    }\n\n    this.rowCount++;\n  };\n\n  reset() {\n    this.grasses.count = 0;\n    this.water.count = 0;\n    this.roads.count = 0;\n    this.railRoads.count = 0;\n\n    this.rowCount = 0;\n    super.reset();\n  }\n\n  // Setup initial scene\n  init = () => {\n    for (let i = 0; i < maxRows; i++) {\n      this.grasses.items[i].position.z = MAP_OFFSET;\n\n      this.water.items[i].position.z = MAP_OFFSET;\n      this.water.items[i].active = false;\n      this.roads.items[i].position.z = MAP_OFFSET;\n      this.roads.items[i].active = false;\n      this.railRoads.items[i].position.z = MAP_OFFSET;\n      this.railRoads.items[i].active = false;\n    }\n\n    this.grasses.items[this.grasses.count].position.z = this.rowCount;\n    this.grasses.items[this.grasses.count].generate(\n      this.mapRowToObstacle(this.rowCount),\n    );\n    this.grasses.count++;\n    this.rowCount++;\n\n    for (let i = 0; i < maxRows + 3; i++) {\n      this.newRow();\n    }\n  };\n\n  mapRowToObstacle = row => {\n    if (this.rowCount < 5) {\n      return Fill.solid;\n    } else if (this.rowCount < 10) {\n      return Fill.empty;\n    }\n    return Fill.random;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}