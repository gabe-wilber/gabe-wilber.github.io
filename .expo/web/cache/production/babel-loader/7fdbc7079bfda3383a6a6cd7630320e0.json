{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import AssetUtils from'expo-asset-utils';import Platform from\"react-native-web/dist/exports/Platform\";import{FileLoader}from'three';import{ColladaLoader}from'three/examples/jsm/loaders/ColladaLoader';import{MTLLoader}from'three/examples/jsm/loaders/MTLLoader';import{OBJLoader}from'three/examples/jsm/loaders/OBJLoader';import readAsStringAsync from\"./readAsStringAsync\";function loadFileAsync(_ref){var asset,funcName;return _regeneratorRuntime.async(function loadFileAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:asset=_ref.asset,funcName=_ref.funcName;if(asset){_context.next=3;break;}throw new Error(\"ExpoTHREE.\"+funcName+\": Cannot parse a null asset\");case 3:_context.next=5;return _regeneratorRuntime.awrap(AssetUtils.uriAsync(asset));case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}});}export function loadMtlAsync(_ref2){var asset,onAssetRequested,uri,loader;return _regeneratorRuntime.async(function loadMtlAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:asset=_ref2.asset,onAssetRequested=_ref2.onAssetRequested;_context2.next=3;return _regeneratorRuntime.awrap(loadFileAsync({asset:asset,funcName:'loadMtlAsync'}));case 3:uri=_context2.sent;if(uri){_context2.next=6;break;}return _context2.abrupt(\"return\");case 6:loader=new MTLLoader();loader.setPath(onAssetRequested);if(!(Platform.OS==='web')){_context2.next=12;break;}_context2.next=11;return _regeneratorRuntime.awrap(new Promise(function(resolve,reject){return loader.load(uri,resolve,function(){},reject);}));case 11:return _context2.abrupt(\"return\",_context2.sent);case 12:return _context2.abrupt(\"return\",loadFileContentsAsync(loader,uri,'loadMtlAsync'));case 13:case\"end\":return _context2.stop();}}});}export function loadObjAsync(options){var asset,onAssetRequested,onMtlAssetRequested,mtlAsset,materials,nextMaterials,uri,loader;return _regeneratorRuntime.async(function loadObjAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:asset=options.asset,onAssetRequested=options.onAssetRequested,onMtlAssetRequested=options.onMtlAssetRequested,mtlAsset=options.mtlAsset,materials=options.materials;nextMaterials=materials;if(!(nextMaterials==null&&mtlAsset!=null)){_context3.next=7;break;}_context3.next=5;return _regeneratorRuntime.awrap(loadMtlAsync({asset:mtlAsset,onAssetRequested:onMtlAssetRequested||onAssetRequested}));case 5:nextMaterials=_context3.sent;nextMaterials.preload();case 7:_context3.next=9;return _regeneratorRuntime.awrap(loadFileAsync({asset:asset,funcName:'loadObjAsync'}));case 9:uri=_context3.sent;if(uri){_context3.next=12;break;}return _context3.abrupt(\"return\");case 12:loader=new OBJLoader();if(onAssetRequested){loader.setPath(onAssetRequested);}if(nextMaterials!=null){loader.setMaterials(nextMaterials);}if(!(Platform.OS==='web')){_context3.next=19;break;}_context3.next=18;return _regeneratorRuntime.awrap(new Promise(function(resolve,reject){return loader.load(uri,resolve,function(){},reject);}));case 18:return _context3.abrupt(\"return\",_context3.sent);case 19:return _context3.abrupt(\"return\",loadFileContentsAsync(loader,uri,'loadObjAsync'));case 20:case\"end\":return _context3.stop();}}});}export function loadDaeAsync(_ref3){var asset,onAssetRequested,onProgress,uri;return _regeneratorRuntime.async(function loadDaeAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:asset=_ref3.asset,onAssetRequested=_ref3.onAssetRequested,onProgress=_ref3.onProgress;_context4.next=3;return _regeneratorRuntime.awrap(loadFileAsync({asset:asset,funcName:'loadDaeAsync'}));case 3:uri=_context4.sent;if(!(typeof uri!=='string'||uri==null)){_context4.next=6;break;}return _context4.abrupt(\"return\");case 6:return _context4.abrupt(\"return\",new Promise(function(res,rej){return new FileLoader().load(uri,function(text){var loader=new ColladaLoader();var parsedResult=loader.parse(text,onAssetRequested);res(parsedResult);},onProgress,rej);}));case 7:case\"end\":return _context4.stop();}}});}function loadFileContentsAsync(loader,uri,funcName){var fileContents,message;return _regeneratorRuntime.async(function loadFileContentsAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.prev=0;_context5.next=3;return _regeneratorRuntime.awrap(readAsStringAsync(uri));case 3:fileContents=_context5.sent;return _context5.abrupt(\"return\",loader.parse(fileContents));case 7:_context5.prev=7;_context5.t0=_context5[\"catch\"](0);message=_context5.t0.message;throw new Error(\"ExpoTHREE.\"+funcName+\": Expo.FileSystem Failed to read uri: \"+uri+\". \"+message);case 11:case\"end\":return _context5.stop();}}},null,null,[[0,7]]);}export function loadArrayBufferAsync(_ref5){var uri,onProgress,loader;return _regeneratorRuntime.async(function loadArrayBufferAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:uri=_ref5.uri,onProgress=_ref5.onProgress;loader=new FileLoader();loader.setResponseType('arraybuffer');return _context6.abrupt(\"return\",new Promise(function(res,rej){return loader.load(uri,res,onProgress,rej);}));case 4:case\"end\":return _context6.stop();}}});}","map":{"version":3,"sources":["../../src/loaders/loadModelsAsync.ts"],"names":[],"mappings":"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","sourcesContent":["import AssetUtils from 'expo-asset-utils';\nimport { Platform } from 'react-native';\nimport { FileLoader } from 'three';\nimport { ColladaLoader } from 'three/examples/jsm/loaders/ColladaLoader';\nimport { MTLLoader } from 'three/examples/jsm/loaders/MTLLoader';\nimport { OBJLoader } from 'three/examples/jsm/loaders/OBJLoader';\n\nimport readAsStringAsync from './readAsStringAsync';\n\nasync function loadFileAsync({ asset, funcName }): Promise<string | null> {\n  if (!asset) {\n    throw new Error(`ExpoTHREE.${funcName}: Cannot parse a null asset`);\n  }\n  return await AssetUtils.uriAsync(asset);\n}\n\nexport async function loadMtlAsync({ asset, onAssetRequested }): Promise<any> {\n  const uri = await loadFileAsync({\n    asset,\n    funcName: 'loadMtlAsync',\n  });\n  if (!uri) return;\n\n  const loader = new MTLLoader();\n  loader.setPath(onAssetRequested);\n\n  if (Platform.OS === 'web') {\n    return await new Promise((resolve, reject) =>\n      loader.load(uri, resolve, () => {}, reject)\n    );\n  }\n\n  return loadFileContentsAsync(loader, uri, 'loadMtlAsync');\n}\n\nexport async function loadObjAsync(options: {\n  asset: any;\n  onAssetRequested?: (...args: any[]) => any;\n  onMtlAssetRequested?: (...args: any[]) => any;\n  mtlAsset?: any;\n  materials?: any;\n}): Promise<any> {\n  const {\n    asset,\n    onAssetRequested,\n    onMtlAssetRequested,\n    mtlAsset,\n    materials,\n  } = options;\n  let nextMaterials = materials;\n  if (nextMaterials == null && mtlAsset != null) {\n    nextMaterials = await loadMtlAsync({\n      asset: mtlAsset,\n      onAssetRequested: onMtlAssetRequested || onAssetRequested,\n    });\n    nextMaterials.preload();\n  }\n\n  const uri = await loadFileAsync({\n    asset,\n    funcName: 'loadObjAsync',\n  });\n  if (!uri) return;\n\n  const loader = new OBJLoader();\n  if (onAssetRequested) {\n    loader.setPath(onAssetRequested as any);\n  }\n  if (nextMaterials != null) {\n    loader.setMaterials(nextMaterials);\n  }\n\n  if (Platform.OS === 'web') {\n    return await new Promise((resolve, reject) =>\n      loader.load(uri, resolve, () => {}, reject)\n    );\n  }\n\n  return loadFileContentsAsync(loader, uri, 'loadObjAsync');\n}\n\nexport async function loadDaeAsync({\n  asset,\n  onAssetRequested,\n  onProgress,\n}): Promise<any> {\n  const uri = await loadFileAsync({\n    asset,\n    funcName: 'loadDaeAsync',\n  });\n  if (typeof uri !== 'string' || uri == null) {\n    return;\n  }\n\n  return new Promise((res, rej) =>\n    new FileLoader().load(\n      uri!,\n      text => {\n        // @ts-ignore\n        const loader = new ColladaLoader();\n        const parsedResult = (loader.parse as any)(text, onAssetRequested);\n        res(parsedResult);\n      },\n      onProgress,\n      rej\n    )\n  );\n}\n\nasync function loadFileContentsAsync(loader, uri, funcName): Promise<any> {\n  try {\n    const fileContents = await readAsStringAsync(uri);\n    return loader.parse(fileContents);\n  } catch ({ message }) {\n    // Or model loader THREE.OBJLoader failed to parse fileContents\n    throw new Error(\n      `ExpoTHREE.${funcName}: Expo.FileSystem Failed to read uri: ${uri}. ${message}`\n    );\n  }\n}\n\nexport async function loadArrayBufferAsync({ uri, onProgress }): Promise<any> {\n  const loader = new FileLoader();\n  loader.setResponseType('arraybuffer');\n  return new Promise((res, rej) => loader.load(uri, res, onProgress, rej));\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}