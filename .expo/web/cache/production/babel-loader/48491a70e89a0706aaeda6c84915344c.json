{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import invariant from'invariant';import PropTypes from'prop-types';import React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{UnavailabilityError,CodedError}from'@unimodules/core';import{canUseViewport}from'fbjs/lib/ExecutionEnvironment';function getImageForAsset(asset){if(asset!=null&&typeof asset==='object'&&asset!==null&&asset.downloadAsync){var dataURI=asset.localUri||asset.uri||'';var image=new Image();image.src=dataURI;return image;}return asset;}function asExpoContext(gl){gl.endFrameEXP=function glEndFrameEXP(){};if(!gl['_expo_texImage2D']){gl['_expo_texImage2D']=gl.texImage2D;gl.texImage2D=function(){for(var _len=arguments.length,props=new Array(_len),_key=0;_key<_len;_key++){props[_key]=arguments[_key];}var nextProps=[].concat(props);nextProps.push(getImageForAsset(nextProps.pop()));return gl['_expo_texImage2D'].apply(gl,_toConsumableArray(nextProps));};}if(!gl['_expo_texSubImage2D']){gl['_expo_texSubImage2D']=gl.texSubImage2D;gl.texSubImage2D=function(){for(var _len2=arguments.length,props=new Array(_len2),_key2=0;_key2<_len2;_key2++){props[_key2]=arguments[_key2];}var nextProps=[].concat(props);nextProps.push(getImageForAsset(nextProps.pop()));return gl['_expo_texSubImage2D'].apply(gl,_toConsumableArray(nextProps));};}return gl;}function ensureContext(canvas,contextAttributes){if(!canvas){throw new CodedError('ERR_GL_INVALID','Attempting to use the GL context before it has been created.');}var context=canvas.getContext('webgl',contextAttributes)||canvas.getContext('webgl-experimental',contextAttributes)||canvas.getContext('experimental-webgl',contextAttributes);invariant(context,'Browser does not support WebGL');return asExpoContext(context);}function stripNonDOMProps(props){for(var k in propTypes){if(k in props){delete props[k];}}return props;}var propTypes={onContextCreate:PropTypes.func.isRequired,onContextRestored:PropTypes.func,onContextLost:PropTypes.func,webglContextAttributes:PropTypes.object};export var GLView=function(_React$Component){_inherits(GLView,_React$Component);function GLView(){var _this;_classCallCheck(this,GLView);_this=_possibleConstructorReturn(this,_getPrototypeOf(GLView).apply(this,arguments));_this.state={width:0,height:0};_this._hasContextBeenCreated=false;_this._contextCreated=function(){_this.gl=_this._createContext();_this.props.onContextCreate(_this.gl);if(_this.canvas){_this.canvas.addEventListener('webglcontextlost',_this._contextLost);_this.canvas.addEventListener('webglcontextrestored',_this._contextRestored);}};_this._updateLayout=function(){if(_this.container){var _this$container=_this.container,_this$container$clien=_this$container.clientWidth,width=_this$container$clien===void 0?0:_this$container$clien,_this$container$clien2=_this$container.clientHeight,height=_this$container$clien2===void 0?0:_this$container$clien2;_this.setState({width:width,height:height});}};_this._contextLost=function(event){event.preventDefault();_this.gl=undefined;if(_this.props.onContextLost){_this.props.onContextLost();}};_this._contextRestored=function(){if(_this.props.onContextRestored){_this.gl=_this._createContext();_this.props.onContextRestored(_this.gl);}};_this._assignCanvasRef=function(canvas){_this.canvas=canvas;};_this._assignContainerRef=function(element){if(element){_this.container=element;}else{_this.container=undefined;}_this._updateLayout();};return _this;}_createClass(GLView,[{key:\"componentDidMount\",value:function componentDidMount(){if(canUseViewport&&window.addEventListener){window.addEventListener('resize',this._updateLayout);}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){if(this.gl){var loseContextExt=this.gl.getExtension('WEBGL_lose_context');if(loseContextExt){loseContextExt.loseContext();}this.gl=undefined;}if(this.canvas){this.canvas.removeEventListener('webglcontextlost',this._contextLost);this.canvas.removeEventListener('webglcontextrestored',this._contextRestored);}window.removeEventListener('resize',this._updateLayout);}},{key:\"render\",value:function render(){var _ref=canUseViewport?window:{},_ref$devicePixelRatio=_ref.devicePixelRatio,devicePixelRatio=_ref$devicePixelRatio===void 0?1:_ref$devicePixelRatio;var _this$props=this.props,style=_this$props.style,props=_objectWithoutProperties(_this$props,[\"style\"]);var _this$state=this.state,width=_this$state.width,height=_this$state.height;var domProps=stripNonDOMProps(props);var containerStyle=StyleSheet.flatten([{flex:1},style]);return React.createElement(\"div\",{ref:this._assignContainerRef,style:containerStyle},React.createElement(\"canvas\",_extends({ref:this._assignCanvasRef,style:{flex:1,width:width,height:height},width:width*devicePixelRatio,height:height*devicePixelRatio},domProps)));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){if(this.canvas&&!this._hasContextBeenCreated){this._hasContextBeenCreated=true;this._contextCreated();}}},{key:\"_createContext\",value:function _createContext(){var webglContextAttributes=this.props.webglContextAttributes;var gl=ensureContext(this.canvas,webglContextAttributes);this._webglContextAttributes=webglContextAttributes||{};return gl;}},{key:\"_getGlOrReject\",value:function _getGlOrReject(){if(!this.gl){throw new CodedError('ERR_GL_INVALID','Attempting to use the GL context before it has been created.');}return this.gl;}},{key:\"takeSnapshotAsync\",value:function takeSnapshotAsync(){var options,gl,_args=arguments;return _regeneratorRuntime.async(function takeSnapshotAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:options=_args.length>0&&_args[0]!==undefined?_args[0]:{};if(GLView.takeSnapshotAsync){_context.next=3;break;}throw new UnavailabilityError('expo-gl','takeSnapshotAsync');case 3:gl=this._getGlOrReject();_context.next=6;return _regeneratorRuntime.awrap(GLView.takeSnapshotAsync(gl,options));case 6:return _context.abrupt(\"return\",_context.sent);case 7:case\"end\":return _context.stop();}}},null,this);}},{key:\"startARSessionAsync\",value:function startARSessionAsync(){return _regeneratorRuntime.async(function startARSessionAsync$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:throw new UnavailabilityError('GLView','startARSessionAsync');case 1:case\"end\":return _context2.stop();}}});}},{key:\"createCameraTextureAsync\",value:function createCameraTextureAsync(){return _regeneratorRuntime.async(function createCameraTextureAsync$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:throw new UnavailabilityError('GLView','createCameraTextureAsync');case 1:case\"end\":return _context3.stop();}}});}},{key:\"destroyObjectAsync\",value:function destroyObjectAsync(glObject){return _regeneratorRuntime.async(function destroyObjectAsync$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:throw new UnavailabilityError('GLView','destroyObjectAsync');case 1:case\"end\":return _context4.stop();}}});}}],[{key:\"createContextAsync\",value:function createContextAsync(){var canvas;return _regeneratorRuntime.async(function createContextAsync$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:canvas=document.createElement('canvas');canvas.width=window.innerWidth*window.devicePixelRatio;canvas.height=window.innerHeight*window.devicePixelRatio;return _context5.abrupt(\"return\",ensureContext(canvas));case 4:case\"end\":return _context5.stop();}}});}},{key:\"destroyContextAsync\",value:function destroyContextAsync(exgl){return _regeneratorRuntime.async(function destroyContextAsync$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:return _context6.abrupt(\"return\",true);case 1:case\"end\":return _context6.stop();}}});}},{key:\"takeSnapshotAsync\",value:function takeSnapshotAsync(exgl){var options,canvas,_args7=arguments;return _regeneratorRuntime.async(function takeSnapshotAsync$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:options=_args7.length>1&&_args7[1]!==undefined?_args7[1]:{};invariant(exgl,'GLView.takeSnapshotAsync(): canvas is not defined');canvas=exgl.canvas;_context7.next=5;return _regeneratorRuntime.awrap(new Promise(function(resolve){canvas.toBlob(function(blob){resolve({uri:blob,localUri:'',width:canvas.width,height:canvas.height});},options.format,options.compress);}));case 5:return _context7.abrupt(\"return\",_context7.sent);case 6:case\"end\":return _context7.stop();}}});}}]);return GLView;}(React.Component);GLView.propTypes=propTypes;","map":{"version":3,"sources":["../src/GLView.web.tsx"],"names":[],"mappings":"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","sourcesContent":["import invariant from 'invariant';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { UnavailabilityError, CodedError } from '@unimodules/core';\nimport { canUseViewport } from 'fbjs/lib/ExecutionEnvironment';\nimport {\n  BaseGLViewProps,\n  GLSnapshot,\n  ExpoWebGLRenderingContext,\n  SnapshotOptions,\n} from './GLView.types';\n\ndeclare const window: Window;\n\nfunction getImageForAsset(asset: {\n  downloadAsync: () => Promise<any>;\n  uri?: string;\n  localUri?: string;\n}): HTMLImageElement | any {\n  if (asset != null && typeof asset === 'object' && asset !== null && asset.downloadAsync) {\n    const dataURI = asset.localUri || asset.uri || '';\n    const image = new Image();\n    image.src = dataURI;\n    return image;\n  }\n  return asset;\n}\n\nfunction asExpoContext(gl: ExpoWebGLRenderingContext): WebGLRenderingContext {\n  gl.endFrameEXP = function glEndFrameEXP(): void {};\n\n  if (!gl['_expo_texImage2D']) {\n    gl['_expo_texImage2D'] = gl.texImage2D;\n    gl.texImage2D = (...props: any[]): any => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texImage2D'](...nextProps);\n    };\n  }\n\n  if (!gl['_expo_texSubImage2D']) {\n    gl['_expo_texSubImage2D'] = gl.texSubImage2D;\n    gl.texSubImage2D = (...props: any[]): any => {\n      let nextProps = [...props];\n      nextProps.push(getImageForAsset(nextProps.pop()));\n      return gl['_expo_texSubImage2D'](...nextProps);\n    };\n  }\n\n  return gl;\n}\n\nfunction ensureContext(\n  canvas?: HTMLCanvasElement,\n  contextAttributes?: WebGLContextAttributes\n): WebGLRenderingContext {\n  if (!canvas) {\n    throw new CodedError(\n      'ERR_GL_INVALID',\n      'Attempting to use the GL context before it has been created.'\n    );\n  }\n  const context =\n    canvas.getContext('webgl', contextAttributes) ||\n    canvas.getContext('webgl-experimental', contextAttributes) ||\n    canvas.getContext('experimental-webgl', contextAttributes);\n  invariant(context, 'Browser does not support WebGL');\n  return asExpoContext(context as ExpoWebGLRenderingContext);\n}\n\nfunction stripNonDOMProps(props: { [key: string]: any }): { [key: string]: any } {\n  for (let k in propTypes) {\n    if (k in props) {\n      delete props[k];\n    }\n  }\n  return props;\n}\n\nconst propTypes = {\n  onContextCreate: PropTypes.func.isRequired,\n  onContextRestored: PropTypes.func,\n  onContextLost: PropTypes.func,\n  webglContextAttributes: PropTypes.object,\n};\n\nexport interface GLViewProps extends BaseGLViewProps {\n  onContextCreate: (gl: WebGLRenderingContext) => void;\n  onContextRestored?: (gl?: WebGLRenderingContext) => void;\n  onContextLost?: () => void;\n  webglContextAttributes?: WebGLContextAttributes;\n}\n\ntype State = {\n  width: number;\n  height: number;\n};\n\nexport class GLView extends React.Component<GLViewProps, State> {\n  state = {\n    width: 0,\n    height: 0,\n  };\n\n  static propTypes = propTypes;\n\n  _hasContextBeenCreated = false;\n\n  _webglContextAttributes: WebGLContextAttributes | undefined;\n\n  canvas: HTMLCanvasElement | undefined;\n\n  container?: HTMLElement;\n\n  gl?: WebGLRenderingContext;\n\n  static async createContextAsync(): Promise<WebGLRenderingContext> {\n    const canvas = document.createElement('canvas');\n    canvas.width = window.innerWidth * window.devicePixelRatio;\n    canvas.height = window.innerHeight * window.devicePixelRatio;\n    return ensureContext(canvas);\n  }\n\n  static async destroyContextAsync(exgl?: WebGLRenderingContext | number): Promise<boolean> {\n    // Do nothing\n    return true;\n  }\n\n  static async takeSnapshotAsync(\n    exgl: WebGLRenderingContext,\n    options: SnapshotOptions = {}\n  ): Promise<GLSnapshot> {\n    invariant(exgl, 'GLView.takeSnapshotAsync(): canvas is not defined');\n    const canvas = exgl.canvas as HTMLCanvasElement;\n    return await new Promise(resolve => {\n      canvas.toBlob(\n        (blob: Blob | null) => {\n          // TODO: Bacon: Should we add data URI?\n          resolve({\n            uri: blob,\n            localUri: '',\n            width: canvas.width,\n            height: canvas.height,\n          });\n        },\n        options.format,\n        options.compress\n      );\n    });\n  }\n\n  componentDidMount() {\n    if (canUseViewport && window.addEventListener) {\n      window.addEventListener('resize', this._updateLayout);\n    }\n  }\n\n  _contextCreated = (): void => {\n    this.gl = this._createContext();\n    this.props.onContextCreate(this.gl);\n    if (this.canvas) {\n      this.canvas.addEventListener('webglcontextlost', this._contextLost);\n      this.canvas.addEventListener('webglcontextrestored', this._contextRestored);\n    }\n  };\n\n  componentWillUnmount() {\n    if (this.gl) {\n      const loseContextExt = this.gl.getExtension('WEBGL_lose_context');\n      if (loseContextExt) {\n        loseContextExt.loseContext();\n      }\n      this.gl = undefined;\n    }\n    if (this.canvas) {\n      this.canvas.removeEventListener('webglcontextlost', this._contextLost);\n      this.canvas.removeEventListener('webglcontextrestored', this._contextRestored);\n    }\n    window.removeEventListener('resize', this._updateLayout);\n  }\n\n  _updateLayout = (): void => {\n    if (this.container) {\n      const { clientWidth: width = 0, clientHeight: height = 0 } = this.container;\n      this.setState({ width, height });\n    }\n  };\n\n  render() {\n    const { devicePixelRatio = 1 } = canUseViewport ? window : {};\n    const { style, ...props } = this.props;\n    const { width, height } = this.state;\n    const domProps = stripNonDOMProps(props);\n\n    const containerStyle: any = StyleSheet.flatten([{ flex: 1 }, style]);\n    return (\n      <div ref={this._assignContainerRef} style={containerStyle}>\n        <canvas\n          ref={this._assignCanvasRef}\n          style={{ flex: 1, width, height }}\n          width={width * devicePixelRatio}\n          height={height * devicePixelRatio}\n          {...domProps}\n        />\n      </div>\n    );\n  }\n\n  componentDidUpdate() {\n    if (this.canvas && !this._hasContextBeenCreated) {\n      this._hasContextBeenCreated = true;\n      this._contextCreated();\n    }\n  }\n\n  _createContext(): WebGLRenderingContext {\n    const { webglContextAttributes } = this.props;\n    const gl = ensureContext(this.canvas, webglContextAttributes);\n    this._webglContextAttributes = webglContextAttributes || {};\n    return gl;\n  }\n\n  _getGlOrReject(): WebGLRenderingContext {\n    if (!this.gl) {\n      throw new CodedError(\n        'ERR_GL_INVALID',\n        'Attempting to use the GL context before it has been created.'\n      );\n    }\n    return this.gl;\n  }\n\n  _contextLost = (event: Event): void => {\n    event.preventDefault();\n    this.gl = undefined;\n    if (this.props.onContextLost) {\n      this.props.onContextLost();\n    }\n  };\n\n  _contextRestored = (): void => {\n    if (this.props.onContextRestored) {\n      this.gl = this._createContext();\n      this.props.onContextRestored(this.gl);\n    }\n  };\n\n  _assignCanvasRef = (canvas: HTMLCanvasElement): void => {\n    this.canvas = canvas;\n  };\n\n  _assignContainerRef = (element: HTMLElement | null): void => {\n    if (element) {\n      this.container = element;\n    } else {\n      this.container = undefined;\n    }\n    this._updateLayout();\n  };\n\n  async takeSnapshotAsync(options: SnapshotOptions = {}): Promise<GLSnapshot> {\n    if (!GLView.takeSnapshotAsync) {\n      throw new UnavailabilityError('expo-gl', 'takeSnapshotAsync');\n    }\n\n    const gl = this._getGlOrReject();\n\n    return await GLView.takeSnapshotAsync(gl, options);\n  }\n\n  async startARSessionAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'startARSessionAsync');\n  }\n\n  async createCameraTextureAsync(): Promise<void> {\n    throw new UnavailabilityError('GLView', 'createCameraTextureAsync');\n  }\n\n  async destroyObjectAsync(glObject: WebGLObject): Promise<void> {\n    throw new UnavailabilityError('GLView', 'destroyObjectAsync');\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}